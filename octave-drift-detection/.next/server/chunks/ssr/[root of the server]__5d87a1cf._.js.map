{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService.ts"],"sourcesContent":["// services/backendService.ts\n\nexport interface KPI {\n  rowKey: string\n  value: string\n  status?: string\n}\n\nexport interface PlotDataPoint {\n  x: string\n  y: number\n  exceedsThreshold: boolean\n}\n\nexport interface TableDataPoint {\n  id: string\n  timePeriod: string\n  meanPrediction?: number\n  error?: number\n  percentageError?: number\n  status: string\n  abs_curr_per?: number\n  abs_ref_per?: number\n  difference?: number\n}\n\nexport interface OutletsExceedingThreshold {\n  id: string\n  y_true: number\n  y_pred: number\n  percentage_error: number\n}\n\nexport interface AllOutlets {\n  id: number\n  percentage_error: number\n  y_pred: number\n  y_true: number\n}\n\nexport interface MSETrend {\n  MSE: number\n  time_period: string\n}\n\nexport interface DashboardData {\n  mode: string\n  businessUnit: string\n  useCase: string\n  ShortCode: string\n  alertKeeper: string\n  runtime: number\n}\n\nexport interface StatusDistribution {\n  good: number\n  warning: number\n  error: number\n}\n\nexport interface FetchDataResult {\n  kpis: KPI[]\n  errors: {\n    plotData: PlotDataPoint[]\n    tableData: TableDataPoint[]\n  }\n  outletsExceedingThreshold: OutletsExceedingThreshold[]\n  xaiExplanation: string\n  currentPeriod: string\n  referencePeriod: string\n  error_percentage_threshold: number\n  dashboardData: DashboardData\n  all_outlets: AllOutlets[]\n  mse_trend: MSETrend[]\n  sorted_periods: string[]\n  driftDetected: boolean\n  filtered_data?: any[]\n  status_distribution: StatusDistribution\n}\n\nexport async function fetchData(\n  { runtime }: { runtime: string } = { runtime: \"\" }\n): Promise<FetchDataResult> {\n  try {\n    // 1. Fetch drift data\n    const resp = await fetch(`/api/mode1/data${runtime ? `?runtime=${runtime}` : \"\"}`, {\n      credentials: \"include\",\n    })\n    if (!resp.ok) {\n      throw new Error(`HTTP error! Status: ${resp.status}`)\n    }\n    const rawData: any = await resp.json()\n\n    // 2. Fetch dashboard config\n    const dashResp = await fetch(`/dashboard.json`)\n    if (!dashResp.ok) {\n      throw new Error(`HTTP error fetching dashboard.json! Status: ${dashResp.status}`)\n    }\n    const dashboardData: DashboardData = await dashResp.json()\n\n    // 3. Extract drift metrics\n    const driftMetrics = rawData.drift_state?.metrics || {}\n    const driftDetected = rawData.drift_state?.drift_detected ?? false\n    const sorted_periods: string[] = rawData.sorted_periods ?? []\n    const referencePeriod = sorted_periods.length > 0 ? sorted_periods[0] : \"N/A\"\n\n    // 4. Build KPI list\n    const kpis: KPI[] = [\n      {\n        rowKey: \"Drift Detected\",\n        value: driftDetected ? \"Yes\" : \"No\",\n        status: driftDetected ? \"Alert\" : \"Normal\",\n      },\n      {\n        rowKey: \"Error Percentage Threshold\",\n        value: String(rawData.error_percentage_threshold ?? \"N/A\"),\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Average Percentage Error (All)\",\n        value:\n          rawData.average_percentage_error_all != null\n            ? rawData.average_percentage_error_all.toFixed(2)\n            : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Average Percentage Error (Exceeding)\",\n        value:\n          rawData.average_percentage_error_exceeding != null\n            ? rawData.average_percentage_error_exceeding.toFixed(2)\n            : \"N/A\",\n        status: \"Alert\",\n      },\n      {\n        rowKey: \"kstest\",\n        value: driftMetrics.ks_statistic?.toFixed(3) ?? \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"wasserstein\",\n        value: driftMetrics.wasserstein_distance?.toFixed(3) ?? \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"mseRef\",\n        value: driftMetrics.mean_mse_reference?.toFixed(3) ?? \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"mseCurrent\",\n        value: driftMetrics.mean_mse_current?.toFixed(3) ?? \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"status\",\n        value: driftDetected ? \"Warning\" : \"Normal\",\n        status: driftDetected ? \"Warning\" : \"Normal\",\n      },\n    ]\n\n    // 5. Map filtered_data => tableData\n    const filtered_data = rawData.filtered_data ?? []\n    const tableData: TableDataPoint[] = filtered_data.map((item: any) => {\n      const abs_curr_per = item.abs_curr_per ?? 0\n      const abs_ref_per = item.abs_ref_per ?? 0\n      const diff = abs_curr_per - abs_ref_per\n      return {\n        id: String(item.id ?? \"\"),\n        timePeriod: item.period ?? \"\",\n        abs_curr_per,\n        abs_ref_per,\n        difference: diff,\n        status: diff > 0 ? \"Alert\" : \"Normal\",\n      }\n    })\n\n    // 6. Build errors object\n    const errors = {\n      plotData: (rawData.id_error ?? []).map((item: any) => ({\n        x: String(item.id ?? \"\"),\n        y: item.Mean_Prediction_Error ?? 0,\n        exceedsThreshold:\n          Math.abs(item.Mean_Prediction_Error ?? 0) >\n          (rawData.error_percentage_threshold ?? 0),\n      })),\n      tableData:\n        tableData.length > 0\n          ? tableData\n          : (rawData.id_error ?? []).map((item: any) => ({\n              id: String(item.id ?? \"\"),\n              timePeriod: item.time_period ?? \"\",\n              meanPrediction: item.Mean_Prediction_Error ?? 0,\n              error: item.Mean_Prediction_Error ?? 0,\n              percentageError: Math.abs(item.Mean_Prediction_Error ?? 0),\n              status:\n                Math.abs(item.Mean_Prediction_Error ?? 0) >\n                (rawData.error_percentage_threshold ?? 0)\n                  ? \"Alert\"\n                  : \"Normal\",\n            })),\n    }\n\n    // 7. Outlets exceeding threshold\n    const outletsExceedingThreshold: OutletsExceedingThreshold[] =\n      (rawData.outlets_exceeding_threshold ?? []).map((item: any) => ({\n        id: String(item.id ?? \"\"),\n        y_true: item.y_true ?? 0,\n        y_pred: item.y_pred ?? 0,\n        percentage_error: item.percentage_error ?? 0,\n      }))\n\n    // 8. MSE trend\n    const mse_trend: MSETrend[] = (rawData.mse_trend ?? []).map((item: any) => ({\n      MSE:\n        typeof item.MSE === \"number\"\n          ? item.MSE\n          : typeof item.mse === \"number\"\n          ? item.mse\n          : 0,\n      time_period: item.time_period ?? item.timePeriod ?? \"\",\n    }))\n\n    // 9. XAI explanation and periods\n    const xaiExplanation = rawData.explanation ?? \"No explanation available\"\n    const currentPeriod = rawData.current_period ?? rawData.currentPeriod ?? \"N/A\"\n    const error_percentage_threshold = rawData.error_percentage_threshold ?? 0\n\n    // 10. Compute status distribution for pie chart\n    const threshold = error_percentage_threshold\n    const warningThreshold = threshold * 0.8\n    let goodCount = 0\n    let warningCount = 0\n    let errorCount = 0\n\n    const allTableRows = errors.tableData\n    interface TableRowWithDifference {\n      difference?: number\n      percentageError?: number\n    }\n\n    (allTableRows as TableRowWithDifference[]).forEach((row: TableRowWithDifference) => {\n      const errVal =\n      Math.abs(row.difference ?? row.percentageError ?? 0)\n      if (errVal >= threshold) {\n      errorCount++\n      } else if (errVal >= warningThreshold) {\n      warningCount++\n      } else {\n      goodCount++\n      }\n    })\n\n    const total = Math.max(goodCount + warningCount + errorCount, 1)\n    const good = Math.round((goodCount / total) * 100)\n    const warning = Math.round((warningCount / total) * 100)\n    const error = 100 - good - warning\n\n    const status_distribution: StatusDistribution = { good, warning, error }\n\n    return {\n      kpis,\n      errors,\n      outletsExceedingThreshold,\n      xaiExplanation,\n      currentPeriod,\n      referencePeriod,\n      error_percentage_threshold,\n      dashboardData,\n      all_outlets: rawData.all_outlets ?? [],\n      mse_trend,\n      sorted_periods,\n      driftDetected,\n      filtered_data,\n      status_distribution,\n    }\n  } catch (err) {\n    console.error(\"Error fetching data:\", err)\n    throw new Error(\"Failed to fetch and process data\")\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/dashboardService.ts"],"sourcesContent":["/**\n * Shared typings\n * -------------------------------------------------------------------------- */\nexport interface Entry {\n  user: string\n  Runtime: string\n  BusinessUnit: string\n  useCase: string\n  ShortCode: string\n  JSONLink: string\n  alertKeeper: string\n}\n\nexport interface EntriesTableFilter {\n  user?: string\n  Runtime?: string\n  BusinessUnit?: string\n  useCase?: string\n  ShortCode?: string\n  JSONLink?: string\n  alertKeeper?: string          // single name – e.g. \"Kalpa\"\n}\n\n/**\n * Utility helpers\n * -------------------------------------------------------------------------- */\nconst eq = (a?: string, b?: string) =>\n  a !== undefined && b !== undefined ? a.toLowerCase() === b.toLowerCase() : true\n\n/**\n * Fetch the entries table from the API and **return only the rows that match\n * the supplied `filters` object**.  \n *\n * The API is *supposed* to filter server‑side, but we’ve seen it sometimes\n * return the full table (all business units, use‑cases, etc.).  To guarantee\n * correctness we:\n *\n *  1. Pass the query‑string parameters that mirror `filters`.\n *  2. Apply the same filters again in the client, so the caller *always* gets\n *     the precise subset it asked for, even if the backend forgets.\n */\nexport async function fetchEntriesTable(\n  filters: EntriesTableFilter = {},\n): Promise<Entry[]> {\n  /* ------------------------------------------------------------------ */\n  /* 1️⃣  Build the query string we’ll send to the server                */\n  /* ------------------------------------------------------------------ */\n  const params = new URLSearchParams()\n  if (filters.user)         params.append('user',         filters.user)\n  if (filters.Runtime)      params.append('Runtime',      filters.Runtime)\n  if (filters.BusinessUnit) params.append('BusinessUnit', filters.BusinessUnit)\n  if (filters.useCase)      params.append('useCase',      filters.useCase)\n  if (filters.ShortCode)    params.append('ShortCode',    filters.ShortCode)\n  if (filters.JSONLink)     params.append('JSONLink',     filters.JSONLink)\n  if (filters.alertKeeper)  params.append('alertKeeper',  filters.alertKeeper)\n\n  /* ------------------------------------------------------------------ */\n  /* 2️⃣  Fetch from the API                                             */\n  /* ------------------------------------------------------------------ */\n  const res = await fetch(`/api/entries-table?${params.toString()}`, {\n    credentials: 'include',\n  })\n\n  if (!res.ok) {\n    throw new Error(`Failed to fetch entries table: ${res.status} ${res.statusText}`)\n  }\n\n  const allRows: Entry[] = await res.json()\n\n  /* ------------------------------------------------------------------ */\n  /* 3️⃣  Apply the same filters client‑side (safety‑net)                */\n  /* ------------------------------------------------------------------ */\n  const rows = allRows.filter((e) => {\n    if (filters.user         && !eq(e.user,          filters.user        )) return false\n    if (filters.Runtime      &&  e.Runtime         !== filters.Runtime     ) return false\n    if (filters.BusinessUnit && !eq(e.BusinessUnit, filters.BusinessUnit)) return false\n    if (filters.useCase      && !eq(e.useCase,      filters.useCase     )) return false\n    if (filters.ShortCode    &&  e.ShortCode       !== filters.ShortCode   ) return false\n    if (filters.JSONLink     &&  e.JSONLink        !== filters.JSONLink    ) return false\n\n    /* alertKeeper: treat it as a comma‑separated list in the source    */\n    if (filters.alertKeeper) {\n      const keepers = e.alertKeeper\n        .split(',')\n        .map((s) => s.trim().toLowerCase())\n      if (!keepers.includes(filters.alertKeeper.toLowerCase())) return false\n    }\n\n    return true\n  })\n\n  return rows\n}\n"],"names":[],"mappings":"AAAA;;8EAE8E;;;AAqB9E;;8EAE8E,GAC9E,MAAM,KAAK,CAAC,GAAY,IACtB,MAAM,aAAa,MAAM,YAAY,EAAE,WAAW,OAAO,EAAE,WAAW,KAAK;AActE,eAAe,kBACpB,UAA8B,CAAC,CAAC;IAEhC,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,SAAS,IAAI;IACnB,IAAI,QAAQ,IAAI,EAAU,OAAO,MAAM,CAAC,QAAgB,QAAQ,IAAI;IACpE,IAAI,QAAQ,OAAO,EAAO,OAAO,MAAM,CAAC,WAAgB,QAAQ,OAAO;IACvE,IAAI,QAAQ,YAAY,EAAE,OAAO,MAAM,CAAC,gBAAgB,QAAQ,YAAY;IAC5E,IAAI,QAAQ,OAAO,EAAO,OAAO,MAAM,CAAC,WAAgB,QAAQ,OAAO;IACvE,IAAI,QAAQ,SAAS,EAAK,OAAO,MAAM,CAAC,aAAgB,QAAQ,SAAS;IACzE,IAAI,QAAQ,QAAQ,EAAM,OAAO,MAAM,CAAC,YAAgB,QAAQ,QAAQ;IACxE,IAAI,QAAQ,WAAW,EAAG,OAAO,MAAM,CAAC,eAAgB,QAAQ,WAAW;IAE3E,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,MAAM,MAAM,MAAM,CAAC,mBAAmB,EAAE,OAAO,QAAQ,IAAI,EAAE;QACjE,aAAa;IACf;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,IAAI,MAAM,CAAC,CAAC,EAAE,IAAI,UAAU,EAAE;IAClF;IAEA,MAAM,UAAmB,MAAM,IAAI,IAAI;IAEvC,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,OAAO,QAAQ,MAAM,CAAC,CAAC;QAC3B,IAAI,QAAQ,IAAI,IAAY,CAAC,GAAG,EAAE,IAAI,EAAW,QAAQ,IAAI,GAAW,OAAO;QAC/E,IAAI,QAAQ,OAAO,IAAU,EAAE,OAAO,KAAa,QAAQ,OAAO,EAAO,OAAO;QAChF,IAAI,QAAQ,YAAY,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,QAAQ,YAAY,GAAG,OAAO;QAC9E,IAAI,QAAQ,OAAO,IAAS,CAAC,GAAG,EAAE,OAAO,EAAO,QAAQ,OAAO,GAAQ,OAAO;QAC9E,IAAI,QAAQ,SAAS,IAAQ,EAAE,SAAS,KAAW,QAAQ,SAAS,EAAK,OAAO;QAChF,IAAI,QAAQ,QAAQ,IAAS,EAAE,QAAQ,KAAY,QAAQ,QAAQ,EAAM,OAAO;QAEhF,oEAAoE,GACpE,IAAI,QAAQ,WAAW,EAAE;YACvB,MAAM,UAAU,EAAE,WAAW,CAC1B,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,GAAG,WAAW;YAClC,IAAI,CAAC,QAAQ,QAAQ,CAAC,QAAQ,WAAW,CAAC,WAAW,KAAK,OAAO;QACnE;QAEA,OAAO;IACT;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/components/Markdown.tsx"],"sourcesContent":["// components/Markdown.tsx\nimport React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport rehypeRaw from 'rehype-raw'\n\nexport function Markdown({ content }: { content: string }) {\n  return (\n    <ReactMarkdown\n      children={content}\n      rehypePlugins={[rehypeRaw]}\n    />\n  )\n}\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAE1B;AACA;;;;AAEO,SAAS,SAAS,EAAE,OAAO,EAAuB;IACvD,qBACE,8OAAC,wLAAA,CAAA,UAAa;QACZ,UAAU;QACV,eAAe;YAAC,6IAAA,CAAA,UAAS;SAAC;;;;;;AAGhC","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/components/Header.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport Image from 'next/image'\nimport Link from 'next/link'\n\ninterface NavigationItem {\n  path: string\n  label: string\n  icon?: React.ReactNode\n  isActive?: boolean\n}\n\ninterface HeaderProps {\n  title: string\n  logoUrl: string\n  navigationItems?: NavigationItem[]\n  className?: string\n  onNavigation?: (path: string) => void\n}\n\nexport default function Header({\n  title,\n  logoUrl,\n  navigationItems = [],\n  className = '',\n  onNavigation\n}: HeaderProps) {\n  return (\n    <header className={`flex items-center p-4 bg-white shadow-sm ${className}`}>\n      <div className=\"flex items-center\">\n        <Image\n          src={logoUrl}\n          alt={`${title} logo`}\n          width={48}\n          height={48}\n          className=\"rounded-full\"\n          priority\n        />\n        <h1 className=\"ml-3 text-xl font-semibold text-gray-800\">{title}</h1>\n      </div>\n\n      <nav className=\"ml-auto\">\n        <ul className=\"flex space-x-4\">\n          {navigationItems.map((item) => (\n            <li key={item.path}>\n              <Link\n                href={item.path}\n                onClick={() => onNavigation?.(item.path)}\n                className={`flex items-center px-3 py-2 rounded-md transition-colors ${\n                  item.isActive\n                    ? 'bg-blue-50 text-blue-600 font-medium'\n                    : 'text-gray-600 hover:bg-gray-50'\n                }`}\n              >\n                {item.icon && <span className=\"mr-2\">{item.icon}</span>}\n                {item.label}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  )\n}"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAqBe,SAAS,OAAO,EAC7B,KAAK,EACL,OAAO,EACP,kBAAkB,EAAE,EACpB,YAAY,EAAE,EACd,YAAY,EACA;IACZ,qBACE,8OAAC;QAAO,WAAW,CAAC,yCAAyC,EAAE,WAAW;;0BACxE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAK,GAAG,MAAM,KAAK,CAAC;wBACpB,OAAO;wBACP,QAAQ;wBACR,WAAU;wBACV,QAAQ;;;;;;kCAEV,8OAAC;wBAAG,WAAU;kCAA4C;;;;;;;;;;;;0BAG5D,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAG,WAAU;8BACX,gBAAgB,GAAG,CAAC,CAAC,qBACpB,8OAAC;sCACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAM,KAAK,IAAI;gCACf,SAAS,IAAM,eAAe,KAAK,IAAI;gCACvC,WAAW,CAAC,yDAAyD,EACnE,KAAK,QAAQ,GACT,yCACA,kCACJ;;oCAED,KAAK,IAAI,kBAAI,8OAAC;wCAAK,WAAU;kDAAQ,KAAK,IAAI;;;;;;oCAC9C,KAAK,KAAK;;;;;;;2BAXN,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;AAmB9B","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode1/page.tsx"],"sourcesContent":["'use client'\nimport { useEffect, useState, useRef } from \"react\"\nimport { Chart, registerables, type Scale, type ChartEvent } from \"chart.js\"\nimport { fetchData } from \"../../services/backendService\"\nimport { fetchEntriesTable } from \"../../services/dashboardService\"\nimport { AlertCircle, AlertTriangle, CheckCircle, RefreshCw, Info, HelpCircle, X } from \"lucide-react\"\nimport { useSearchParams } from \"next/navigation\"\nimport { Markdown } from \"../../components/Markdown\"\nimport Header from '../../components/Header'\nimport { jsPDF } from \"jspdf\"\nimport html2canvas from \"html2canvas-pro\"\n\nChart.register(...registerables)\n\ninterface KPI {\n  rowKey: string\n  value: string\n  status?: string\n}\n\ninterface PlotDataPoint {\n  x: string\n  y: number\n  exceedsThreshold: boolean\n}\n\ninterface TableDataPoint {\n  id: string\n  timePeriod: string\n  meanPrediction?: number\n  error?: number\n  percentageError?: number\n  status: string\n  abs_curr_per?: number\n  abs_ref_per?: number\n  difference?: number\n}\n\ninterface OutletsExceedingThreshold {\n  id: string\n  y_true: number\n  y_pred: number\n  percentage_error: number\n}\n\ninterface AllOutlets {\n  id: number\n  percentage_error: number\n  y_pred: number\n  y_true: number\n}\n\ninterface MSETrend {\n  MSE: number\n  time_period: string\n}\n\ninterface ErrorDataState {\n  plotData: PlotDataPoint[]\n  tableData: TableDataPoint[]\n}\n\ninterface EntryTableItem {\n  BusinessUnit: string\n  useCase: string\n  ShortCode: string\n  Runtime: string\n  alertKeeper: string\n}\n\nconst tooltipContent = {\n  kstest: {\n    title: \"Kolmogorov-Smirnov Test\",\n    content: `The KS test measures the maximum difference between two cumulative distribution functions. \nIt helps determine if two datasets differ significantly. Lower values indicate more similar distributions.`,\n    image: \"/ks-test-diagram.png\",\n  },\n  wasserstein: {\n    title: \"Wasserstein Distance\",\n    content: `The Wasserstein distance measures the minimum \"cost\" of transforming one distribution into another.`,\n    image: \"/wasserstein-diagram.png\",\n  },\n}\n\nconst ERROR_RANGES = [\n  { min: 0, max: 10, label: \"0-10%\" },\n  { min: 10, max: 20, label: \"10-20%\" },\n  { min: 20, max: 30, label: \"20-30%\" },\n  { min: 30, max: 40, label: \"30-40%\" },\n  { min: 40, max: 50, label: \"40-50%\" },\n  { min: 50, max: 60, label: \"50-60%\" },\n  { min: 60, max: 70, label: \"60-70%\" },\n  { min: 70, max: 80, label: \"70-80%\" },\n  { min: 80, max: 90, label: \"80-90%\" },\n  { min: 90, max: 100, label: \"90-100%\" },\n  { min: 100, max: Number.POSITIVE_INFINITY, label: \">100%\" },\n]\n\nconst TooltipPopup = ({ type, onClose }: { type: string; onClose: () => void }) => {\n  const content = tooltipContent[type as keyof typeof tooltipContent]\n  if (!content) return null\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\" onClick={onClose}>\n      <div className=\"bg-white border border-sky-300 rounded-lg shadow-xl max-w-2xl w-full p-6\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"flex justify-between items-start mb-4\">\n          <h3 className=\"text-xl font-bold text-sky-700\">{content.title}</h3>\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-800 transition-colors\">\n            <X className=\"h-5 w-5\" />\n          </button>\n        </div>\n        <div className=\"prose prose-sky max-w-none mb-4\">\n          <p className=\"text-gray-700 whitespace-pre-line\">{content.content}</p>\n        </div>\n        {content.image && (\n          <div className=\"mt-4 flex justify-center\">\n            <img\n              src={content.image}\n              alt={`${content.title} visualization`}\n              className=\"max-w-full h-auto rounded-md border border-gray-300\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default function Mode1Page() {\n  const searchParams = useSearchParams()\n  const businessUnitParam = searchParams.get(\"businessUnit\") || \"\"\n  const useCaseParam = searchParams.get(\"useCase\") || \"\"\n\n  const chartRef = useRef<Chart | null>(null)\n  const pieChartRef = useRef<Chart | null>(null)\n  const errorRangeChartRef = useRef<Chart | null>(null)\n\n  const [kpis, setKpis] = useState<KPI[]>([])\n  const [errors, setErrors] = useState<ErrorDataState>({ plotData: [], tableData: [] })\n  const [outletsExceedingThreshold, setOutletsExceedingThreshold] = useState<OutletsExceedingThreshold[]>([])\n  const [allOutlets, setAllOutlets] = useState<AllOutlets[]>([])\n  const [xaiExplanation, setXaiExplanation] = useState<string>(\"No explanation available\")\n  const [currentPeriod, setCurrentPeriod] = useState<string>(\"N/A\")\n  const [referencePeriod, setReferencePeriod] = useState<string>(\"N/A\")\n  const [errorPercentageThreshold, setErrorPercentageThreshold] = useState<number>(0)\n  const [mseTrend, setMseTrend] = useState<MSETrend[]>([])\n  const [sortedPeriods, setSortedPeriods] = useState<string[]>([])\n  const [driftDetected, setDriftDetected] = useState<boolean | null>(null)\n  const [errorTableView, setErrorTableView] = useState<string>(\"all\")\n  const [filteredErrorData, setFilteredErrorData] = useState<TableDataPoint[]>([])\n  const [businessUnit, setBusinessUnit] = useState<string>(\"\")\n  const [useCase, setUseCase] = useState<string>(\"\")\n  const [shortCode, setShortCode] = useState<string>(\"\")\n  const [alertKeeperValue, setAlertKeeperValue] = useState<string>(\"\")\n  const [runtimeValue, setRuntimeValue] = useState<string>(\"\")\n  const [runtimeOptions, setRuntimeOptions] = useState<string[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [backendError, setBackendError] = useState<string | null>(null)\n  const [statusDistribution, setStatusDistribution] = useState({ good: 65, warning: 25, error: 10 })\n  const [activeTooltip, setActiveTooltip] = useState<string | null>(null)\n  const [errorRangeData, setErrorRangeData] = useState<{ range: string; count: number; outlets: AllOutlets[] }[]>([])\n  const [selectedRange, setSelectedRange] = useState<string | null>(null)\n  const [selectedRangeOutlets, setSelectedRangeOutlets] = useState<AllOutlets[]>([])\n  const [entries, setEntries] = useState<EntryTableItem[]>([])\n\n  useEffect(() => {\n    if (!businessUnitParam || !useCaseParam) return\n\n    const loadEntries = async () => {\n      try {\n        const fetched = await fetchEntriesTable({\n          BusinessUnit: businessUnitParam,\n          useCase: useCaseParam,\n        })\n        const filtered = fetched.filter(\n          entry => entry.BusinessUnit !== \"Not Selected\" && entry.useCase !== \"Not Selected\" && entry.ShortCode !== \"Not Available\"\n        )\n        setEntries(filtered)\n\n        if (filtered.length === 0) {\n          setBusinessUnit(\"Not Selected\")\n          setUseCase(\"Not Selected\")\n          setShortCode(\"Not Available\")\n          setRuntimeOptions([])\n          setAlertKeeperValue(\"Not Selected\")\n          setRuntimeValue(\"\")\n        } else {\n          setBusinessUnit(filtered[0].BusinessUnit)\n          setUseCase(filtered[0].useCase)\n          setShortCode(filtered[0].ShortCode)\n          const uniqueRuntimes = Array.from(new Set(filtered.map(e => e.Runtime)))\n          setRuntimeOptions(uniqueRuntimes)\n          setRuntimeValue(uniqueRuntimes[0])\n          setAlertKeeperValue(filtered.find(e => e.Runtime === uniqueRuntimes[0])?.alertKeeper || \"\")\n        }\n      } catch (err) {\n        console.error(err)\n        setBackendError(err instanceof Error ? err.message : \"Failed to load entries\")\n      }\n    }\n\n    loadEntries()\n  }, [businessUnitParam, useCaseParam])\n\n  useEffect(() => {\n    if (!runtimeValue) return\n    const matched = entries.find(e => e.Runtime === runtimeValue)\n    setAlertKeeperValue(matched?.alertKeeper || \"Not Selected\")\n  }, [runtimeValue, entries])\n\n  const fetchAllData = async (): Promise<void> => {\n    setLoading(true)\n    setBackendError(null)\n    try {\n      const data = await fetchData({ runtime: runtimeValue })\n\n      setKpis(data.kpis || [])\n      setErrors(data.errors || { plotData: [], tableData: [] })\n      setOutletsExceedingThreshold(data.outletsExceedingThreshold || [])\n      setAllOutlets(data.all_outlets || [])\n      setXaiExplanation(data.xaiExplanation || \"No explanation available\")\n      setCurrentPeriod(data.currentPeriod || \"N/A\")\n\n      const mseTrendData = data.mse_trend || []\n      setMseTrend(mseTrendData)\n\n      if (mseTrendData.length > 0) {\n        setReferencePeriod(mseTrendData[0].time_period)\n      } else if (data.referencePeriod) {\n        setReferencePeriod(data.referencePeriod)\n      } else if (data.sorted_periods?.length > 0) {\n        setReferencePeriod(data.sorted_periods[0])\n      } else {\n        setReferencePeriod(\"N/A\")\n      }\n\n      setErrorPercentageThreshold(data.error_percentage_threshold ?? 0)\n      setSortedPeriods(data.sorted_periods || [])\n      setDriftDetected(data.driftDetected ?? null)\n\n      const tableData = data.errors?.tableData || []\n      const threshold = data.error_percentage_threshold || 5\n      const warningThreshold = threshold * 0.8\n\n      let goodCount = 0\n      let warningCount = 0\n      let errorCount = 0\n      tableData.forEach(row => {\n        const errorValue = Math.abs(row.difference ?? 0)\n        if (errorValue >= threshold) errorCount++\n        else if (errorValue >= warningThreshold) warningCount++\n        else goodCount++\n      })\n\n      const total = Math.max(goodCount + warningCount + errorCount, 1)\n      const good = Math.round((goodCount / total) * 100)\n      const warning = Math.round((warningCount / total) * 100)\n      const error = 100 - good - warning\n      setStatusDistribution({ good, warning, error })\n\n      if (data.all_outlets?.length) {\n        const rangeData = ERROR_RANGES.map(range => {\n          const outletsInRange = data.all_outlets.filter((outlet: AllOutlets) => \n            outlet.percentage_error >= range.min && outlet.percentage_error < range.max\n          )\n          return { range: range.label, count: outletsInRange.length, outlets: outletsInRange }\n        })\n        setErrorRangeData(rangeData)\n      }\n    } catch (err) {\n      console.error(err)\n      setBackendError(\"Using fallback mock data — backend unavailable.\")\n      // Mock data setup remains same\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (runtimeValue) fetchAllData()\n  }, [runtimeValue])\n\n  useEffect(() => {\n    if (!errors.tableData.length) return\n    const uniqueData = errors.tableData\n      .filter((row, index, self) => index === self.findIndex(r => r.id === row.id))\n      .sort((a, b) => (b.difference ?? 0) - (a.difference ?? 0))\n\n    if (errorTableView === \"all\") setFilteredErrorData(uniqueData)\n    else if (errorTableView === \"top20\") {\n      const top20 = uniqueData.slice(0, 20)\n      const bottom20 = [...uniqueData].sort((a, b) => (a.difference ?? 0) - (b.difference ?? 0)).slice(0, 20)\n      setFilteredErrorData([...top20, ...bottom20])\n    } else if (errorTableView === \"top50\") {\n      const top50 = uniqueData.slice(0, 50)\n      const bottom50 = [...uniqueData].sort((a, b) => (a.difference ?? 0) - (b.difference ?? 0)).slice(0, 50)\n      setFilteredErrorData([...top50, ...bottom50])\n    }\n  }, [errorTableView, errors.tableData])\n\n  useEffect(() => {\n    if (!loading) {\n      renderPieChart()\n      renderErrorRangeChart()\n    }\n  }, [loading, statusDistribution, errorRangeData])\n\n  const handleBarClick = (rangeIndex: number) => {\n    if (rangeIndex >= 0 && rangeIndex < errorRangeData.length) {\n      const range = errorRangeData[rangeIndex]\n      setSelectedRange(range.range)\n      setSelectedRangeOutlets(range.outlets)\n    }\n  }\n\n  const downloadErrorCSV = () => {\n    if (!errors.tableData.length) return\n    const uniqueData = errors.tableData\n      .filter((row, index, self) => index === self.findIndex(r => r.id === row.id))\n      .sort((a, b) => (b.difference ?? 0) - (a.difference ?? 0))\n\n    const headers = [\"ID\", \"Current Error\", \"Reference Error\", \"Difference\"]\n    const csvContent = [\n      headers.join(\",\"),\n      ...uniqueData.map(row => [\n        row.id,\n        (row.abs_curr_per ?? 0).toFixed(2),\n        (row.abs_ref_per ?? 0).toFixed(2),\n        (row.difference ?? 0).toFixed(2),\n      ].join(\",\")),\n    ].join(\"\\n\")\n\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" })\n    const url = URL.createObjectURL(blob)\n    const link = document.createElement(\"a\")\n    link.setAttribute(\"href\", url)\n    link.setAttribute(\"download\", `error_comparison_${currentPeriod}.csv`)\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n  const downloadXaiAsPDF = () => {\n    const markdownElement = document.getElementById(\"xai-markdown-container\")\n    if (!markdownElement) return\n\n    html2canvas(markdownElement, { scale: 2, backgroundColor: \"#ffffff\" }).then(canvas => {\n      const pdf = new jsPDF({ orientation: \"portrait\", unit: \"mm\", format: \"a4\" })\n      const imgWidth = 210\n      const pageHeight = 295\n      const imgHeight = (canvas.height * imgWidth) / canvas.width\n      let heightLeft = imgHeight\n      let position = 0\n\n      pdf.addImage(canvas, \"PNG\", 0, position, imgWidth, imgHeight)\n      heightLeft -= pageHeight\n\n      while (heightLeft > 0) {\n        position = heightLeft - imgHeight\n        pdf.addPage()\n        pdf.addImage(canvas, \"PNG\", 0, position, imgWidth, imgHeight)\n        heightLeft -= pageHeight\n      }\n      pdf.save(`xai_explanation_${currentPeriod}.pdf`)\n    })\n  }\n\n  const renderPieChart = () => {\n    const ctx = document.getElementById(\"statusPieChart\") as HTMLCanvasElement | null\n    if (!ctx) return\n\n    if (pieChartRef.current) pieChartRef.current.destroy()\n\n    const { good, warning, error } = statusDistribution\n    pieChartRef.current = new Chart(ctx, {\n      type: \"pie\",\n      data: {\n        labels: [\"Good\", \"Warning\", \"Error\"],\n        datasets: [{\n          data: [good, warning, error],\n          backgroundColor: [\"rgba(52, 211, 153, 0.8)\", \"rgba(251, 191, 36, 0.8)\", \"rgba(239, 68, 68, 0.8)\"],\n          borderColor: [\"rgba(52, 211, 153, 1)\", \"rgba(251, 191, 36, 1)\", \"rgba(239, 68, 68, 1)\"],\n          borderWidth: 1,\n        }],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: \"right\",\n            labels: { color: \"#334155\", font: { size: 14 } }\n          },\n          tooltip: {\n            callbacks: { label: ctx => `${ctx.label}: ${ctx.raw}%` },\n            backgroundColor: \"rgba(15, 23, 42, 0.8)\",\n            titleColor: \"#ffffff\",\n            bodyColor: \"#ffffff\",\n          }\n        }\n      }\n    })\n  }\n\n  const renderErrorRangeChart = () => {\n    const ctx = document.getElementById(\"errorRangeChart\") as HTMLCanvasElement | null\n    if (!ctx) return\n\n    if (errorRangeChartRef.current) errorRangeChartRef.current.destroy()\n\n    const gradientColors = [\n      \"rgba(0, 255, 0, 0.8)\",    // green\n      \"rgba(51, 255, 0, 0.8)\",\n      \"rgba(102, 255, 0, 0.8)\",\n      \"rgba(153, 255, 0, 0.8)\",\n      \"rgba(204, 255, 0, 0.8)\",\n      \"rgba(255, 255, 0, 0.8)\",  // yellow\n      \"rgba(255, 204, 0, 0.8)\",\n      \"rgba(255, 153, 0, 0.8)\",\n      \"rgba(255, 102, 0, 0.8)\",\n      \"rgba(255, 51, 0, 0.8)\",\n      \"rgba(255, 0, 0, 0.8)\"     // red\n    ];\n\n\n    errorRangeChartRef.current = new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: errorRangeData.map(d => d.range),\n        datasets: [{\n          label: \"Number of IDs\",\n          data: errorRangeData.map(d => d.count),\n          backgroundColor: gradientColors,\n          borderColor: gradientColors.map(c => c.replace('0.8', '1')),\n          borderWidth: 1,\n          borderRadius: 4,\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: { display: true, position: \"top\" },\n          title: { display: true, text: \"ID Distribution by Error Percentage Range\" },\n          tooltip: {\n            callbacks: {\n              label: ctx => `IDs: ${ctx.raw}`,\n              afterLabel: () => `Click to view details`\n            }\n          }\n        },\n        scales: {\n          x: { title: { display: true, text: \"Error Percentage Range\" } },\n          y: { title: { display: true, text: \"Number of IDs\" }, beginAtZero: true }\n        },\n        onClick: (_event, elements) => {\n          if (elements?.length > 0) handleBarClick(elements[0].index)\n        }\n      }\n    })\n  }\n\n  const calculateMseChange = () => {\n    const refMse = Number.parseFloat(kpis.find(k => k.rowKey === \"mseRef\")?.value || \"0\")\n    const currMse = Number.parseFloat(kpis.find(k => k.rowKey === \"mseCurrent\")?.value || \"0\")\n    if (refMse === 0) return \"N/A\"\n    const change = ((currMse - refMse) / refMse) * 100\n    return `${change >= 0 ? \"+\" : \"\"}${change.toFixed(2)}%`\n  }\n\n  const getStatusColor = (s?: string) => {\n    if (!s) return \"text-gray-700\"\n    switch (s.toLowerCase()) {\n      case \"warning\": return \"text-amber-700\"\n      case \"error\": return \"text-rose-700\"\n      case \"success\": return \"text-emerald-700\"\n      default: return \"text-sky-700\"\n    }\n  }\n\n  const getStatusIcon = (s?: string) => {\n    if (!s) return <Info className=\"h-5 w-5 text-gray-700\" />\n    switch (s.toLowerCase()) {\n      case \"warning\": return <AlertTriangle className=\"h-5 w-5 text-amber-700\" />\n      case \"error\": return <AlertCircle className=\"h-5 w-5 text-rose-700\" />\n      case \"success\": return <CheckCircle className=\"h-5 w-5 text-emerald-700\" />\n      default: return <Info className=\"h-5 w-5 text-sky-700\" />\n    }\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"bg-gradient-to-b from-gray-100 to-gray-200 min-h-screen flex flex-col\">\n        <title>Mode 1 | Business Dashboard</title>\n        <main className=\"flex-grow container mx-auto px-4 py-8\">\n          {backendError && (\n            <div className=\"bg-rose-950/40 border border-rose-800/60 rounded-lg p-4 mb-6 backdrop-blur-sm shadow-lg\">\n              <div className=\"flex items-center\">\n                <AlertCircle className=\"h-5 w-5 text-rose-400 mr-2\" />\n                <h3 className=\"text-lg font-medium text-rose-300\">Backend Error</h3>\n              </div>\n              <p className=\"mt-2 text-rose-200\">{backendError}</p>\n              <button onClick={fetchAllData} className=\"mt-3 px-4 py-2 bg-rose-800/50 hover:bg-rose-700/70 text-white rounded-md text-sm flex items-center gap-2\">\n                <RefreshCw className=\"h-4 w-4\" /> Retry\n              </button>\n            </div>\n          )}\n\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\">\n            <h2 className=\"text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-600 to-sky-800 mb-2\">\n              OCTAVE – RG Dashboard\n            </h2>\n            <div className=\"flex flex-col sm:flex-row sm:items-center gap-4\">\n              <div className=\"text-sky-700 flex flex-col sm:flex-row sm:items-center gap-2\">\n                <p className=\"flex items-center gap-2\">\n                  <span className=\"inline-block h-2 w-2 rounded-full bg-sky-600 animate-pulse\" />\n                  Current Period: {loading ? \"Loading...\" : currentPeriod}\n                </p>\n                <p className=\"flex items-center gap-2 sm:ml-6\">\n                  <span className=\"inline-block h-2 w-2 rounded-full bg-gray-600\" />\n                  Reference Period: {loading ? \"Loading...\" : referencePeriod}\n                </p>\n              </div>\n              {driftDetected !== null && (\n                <div className={`flex items-center gap-2 sm:ml-6 px-3 py-1.5 rounded-md bg-transparent ${driftDetected ? \"border border-rose-700\" : \"border border-emerald-700\"}`}>\n                  <span className={`font-medium ${driftDetected ? 'text-rose-500' : 'text-emerald-500'}`}>Drift Detected:</span>\n                  <span className={`font-bold ${driftDetected ? \"text-rose-500\" : \"text-emerald-500\"}`}>\n                    {driftDetected ? \"Yes\" : \"No\"}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Remaining JSX remains similar with proper error handling and styling adjustments */}\n          {/* Ensure all sections use consistent color schemes and data handling */}\n          \n\n\n        {/* Static Filters Box and Runtime in 2:1 ratio */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6\">\n          {/* Static Filters Box - 2/3 */}\n          <div className=\"bg-gradient-to-br from-white to-sky-100/50 dark:from-gray-800 dark:to-gray-900 p-6 rounded-lg border border-sky-300/50 dark:border-gray-600 shadow-md\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <div className=\"mb-4\">\n                  <span className=\"text-lg font-medium text-sky-700\">Business Unit: </span>\n                  <span className=\"text-sky-900\">{loading ? \"Loading…\" : businessUnit || \"Not Selected\"}</span>\n                </div>\n                <div>\n                  <span className=\"text-lg font-medium text-sky-700\">Use Case: </span>\n                  <span className=\"text-sky-900\">{loading ? \"Loading…\" : useCase || \"Not Selected\"}</span>\n                </div>\n              </div>\n              <div>\n                <div className=\"mb-4\">\n                  <span className=\"text-lg font-medium text-sky-700\">Short Code: </span>\n                  <span className=\"text-sky-900\">{loading ? \"Loading…\" : shortCode || \"Not Available\"}</span>\n                </div>\n                <div>\n                  <span className=\"text-lg font-medium text-sky-700\">Alert Keeper: </span>\n                  <span className=\"text-sky-900\">{loading ? \"Loading…\" : alertKeeperValue || \"Not Selected\"}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Runtime - 1/3 */}\n          <div className=\"bg-gradient-to-br from-white to-sky-100/50 p-6 rounded-lg border border-sky-300/50 shadow-md\">\n            <h3 className=\"text-lg font-medium text-sky-700 mb-2\">Runtime</h3>\n            <select\n              className=\"w-full bg-white border border-sky-400/70 rounded-md p-2 text-gray-800 focus:ring-2 focus:ring-sky-500\"\n              value={runtimeValue}\n              onChange={(e) => setRuntimeValue(e.target.value)}\n              disabled={runtimeOptions.length === 0}\n            >\n              {runtimeOptions.length === 0 ? (\n                <option value=\"\">No runtimes available</option>\n              ) : (\n                runtimeOptions.map((runtime) => (\n                  <option key={runtime} value={runtime}>\n                    {runtime}\n                  </option>\n                ))\n              )}\n            </select>\n          </div>\n        </div>\n\n        {/* MAPE/MSE Plot and Status Distribution */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6\">\n          {/* MAPE/MSE Plot */}\n          <div className=\"lg:col-span-2 bg-white/90 rounded-xl shadow-xl overflow-hidden p-6 border border-sky-200/70 backdrop-blur-sm\">\n            <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-600 to-sky-800 mb-4\">\n              MSE Trend Analysis\n            </h2>\n            <div className=\"h-80 bg-gray-100/80 rounded-lg p-4 border border-sky-200/70\">\n              {loading ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <svg\n                    className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    />\n                  </svg>\n                  <span className=\"text-sky-300\">Loading plot data...</span>\n                </div>\n              ) : (\n                <canvas\n                  id=\"mapeMseChart\"\n                  className=\"w-full h-full\"\n                  ref={(el) => {\n                    if (!loading && el) {\n                      const ctx = el.getContext(\"2d\")\n                      if (ctx) {\n                        if (chartRef.current) {\n                          chartRef.current.destroy()\n                        }\n                        chartRef.current = new Chart(ctx, {\n                          type: \"line\",\n                          data: {\n                            labels: mseTrend.map((d) => d.time_period),\n                            datasets: [\n                              {\n                                label: \"MSE Values\",\n                                data: mseTrend.map((d) => d.MSE),\n                                borderColor: \"rgb(56, 189, 248)\",\n                                backgroundColor: \"rgba(56, 189, 248, 0.2)\",\n                                borderWidth: 2,\n                                tension: 0.3,\n                                fill: true,\n                                pointBackgroundColor: \"rgba(56, 189, 248, 1)\",\n                                pointBorderColor: \"#fff\",\n                                pointRadius: 4,\n                                pointHoverRadius: 6,\n                              },\n                            ],\n                          },\n                          options: {\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            plugins: {\n                              legend: {\n                                labels: { color: \"#334155\", font: { weight: \"bold\" } }, // Changed from #e5e7eb\n                                title: {\n                                  display: true,\n                                  text: \"MSE Trend Analysis\",\n                                  color: \"#0369a1\", // Changed from #38bdf8 to a darker blue\n                                  font: { size: 16, weight: \"bold\" },\n                                },\n                              },\n                              tooltip: {\n                                mode: \"index\",\n                                intersect: false,\n                                backgroundColor: \"rgba(15, 23, 42, 0.8)\",\n                                titleColor: \"#ffffff\",\n                                bodyColor: \"#ffffff\",\n                                borderColor: \"#1e40af\",\n                                borderWidth: 1,\n                                padding: 10,\n                                callbacks: {\n                                  label: (ctx) => `MSE: ${ctx.parsed.y.toFixed(4)}`,\n                                },\n                              },\n                            },\n                            scales: {\n                              x: {\n                                title: {\n                                  display: true,\n                                  text: \"Time Period\",\n                                  color: \"#0369a1\", // Changed from #38bdf8\n                                  font: { weight: \"bold\" },\n                                },\n                                grid: {\n                                  color: \"rgba(148, 163, 184, 0.1)\",\n                                  borderColor: \"rgba(148, 163, 184, 0.2)\",\n                                },\n                                ticks: {\n                                  color: \"#334155\", // Changed from #e5e7eb\n                                  font: { size: 12 },\n                                },\n                              },\n                              y: {\n                                title: {\n                                  display: true,\n                                  text: \"MSE Value\",\n                                  color: \"#0369a1\", // Changed from #38bdf8\n                                  font: { weight: \"bold\" },\n                                },\n                                beginAtZero: true,\n                                grid: {\n                                  color: \"rgba(148, 163, 184, 0.1)\",\n                                  borderColor: \"rgba(148, 163, 184, 0.2)\",\n                                },\n                                ticks: {\n                                  color: \"#334155\", // Changed from #e5e7eb\n                                  font: { size: 12 },\n                                  callback: function (this: Scale, tickValue: string | number): string | number {\n                                    if (typeof tickValue === \"number\") {\n                                      return tickValue.toFixed(4)\n                                    }\n                                    return tickValue\n                                  },\n                                },\n                              },\n                            },\n                            interaction: { mode: \"index\", intersect: false },\n                            hover: { mode: \"nearest\", intersect: true },\n                            animation: { duration: 1500, easing: \"easeOutQuart\" },\n                            elements: { line: { tension: 0.4 } },\n                          },\n                        })\n                      }\n                    }\n                  }}\n                />\n              )}\n            </div>\n          </div>\n\n          {/* Status Distribution */}\n          <div className=\"bg-gradient-to-br from-white to-sky-100/50 p-6 rounded-lg border border-sky-300/50 shadow-md\">\n            <h3 className=\"text-lg font-medium text-sky-700 mb-2\">Status Distribution</h3>\n            <div className=\"h-64\">\n              <canvas id=\"statusPieChart\"></canvas>\n            </div>\n          </div>\n        </div>\n\n        {/* KPIs Section */}\n        <div className=\"\n          bg-white/90 dark:bg-gray-800/90\n          rounded-xl shadow-xl overflow-hidden\n          p-6 mb-6\n          border border-sky-200/70 dark:border-gray-600\n          backdrop-blur-sm\n        \">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-600 to-sky-800 mb-4\">\n            Key Performance Indicators\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {/* KS-test & Wasserstein */}\n            <div\n              className=\"bg-gradient-to-br from-white to-sky-100/50 p-4 rounded-lg border border-sky-300/50 shadow-md\n hover:shadow-sky-900/20 hover:border-sky-700/50 transition-all relative\"\n            >\n              <button\n                onClick={() => setActiveTooltip(\"kstest\")}\n                className=\"absolute top-2 right-2 text-sky-400 hover:text-sky-300 transition-colors\"\n                aria-label=\"KS Test Information\"\n              >\n                <HelpCircle className=\"h-5 w-5\" />\n              </button>\n              <h3 className=\"text-lg font-medium text-sky-700 mb-2\">KStest</h3>\n              <div className=\"flex items-center\">\n                <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                  <Info className=\"h-5 w-5 text-sky-300\" />\n                </div>\n                <p className=\"text-xl font-semibold text-gray-800\">\n                  {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"kstest\")?.value || \"N/A\"}\n                </p>\n              </div>\n              <div className=\"mt-4 border-t border-sky-800/30 pt-4\">\n                <h3 className=\"text-lg font-medium text-sky-700 mb-2\">Wasserstein</h3>\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                    <Info className=\"h-5 w-5 text-sky-300\" />\n                  </div>\n                  <p className=\"text-xl font-semibold text-gray-800\">\n                    {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"wasserstein\")?.value || \"N/A\"}\n                  </p>\n                </div>\n                <button\n                  onClick={() => setActiveTooltip(\"wasserstein\")}\n                  className=\"absolute bottom-2 right-2 text-sky-400 hover:text-sky-300 transition-colors\"\n                  aria-label=\"Wasserstein Distance Information\"\n                >\n                  <HelpCircle className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* MSE Metrics */}\n            <div className=\"bg-gradient-to-br from-white to-sky-100/50 p-4 rounded-lg border border-sky-300/50 shadow-md hover:shadow-sky-900/20 hover:border-sky-700/50 transition-all\">\n              <h3 className=\"text-lg font-medium text-sky-700 mb-2\">MSE Metrics</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">Ref MSE:</span>\n                  <span className=\"text-sm font-medium text-gray-800\">\n                    {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"mseRef\")?.value || \"N/A\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">Curr MSE:</span>\n                  <span className=\"text-sm font-medium text-gray-800\">\n                    {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"mseCurrent\")?.value || \"N/A\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">Change:</span>\n                  <span\n                    className={`text-sm font-medium ${calculateMseChange().startsWith(\"+\") ? \"text-rose-600\" : \"text-emerald-600\"}`}\n                  >\n                    {loading ? \"Loading...\" : calculateMseChange()}\n                  </span>\n                </div>\n                <div className=\"pt-2 border-t border-sky-800/30\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                      {getStatusIcon(kpis.find((k) => k.rowKey === \"status\")?.value)}\n                    </div>\n                    <p\n                      className={`text-xl font-semibold ${getStatusColor(kpis.find((k) => k.rowKey === \"status\")?.value)}`}\n                    >\n                      {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"status\")?.value || \"N/A\"}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Additional Metrics */}\n            <div className=\"bg-gradient-to-br from-white to-sky-100/50 p-4 rounded-lg border border-sky-300/50 shadow-md hover:shadow-sky-900/20 hover:border-sky-700/50 transition-all\">\n              <h3 className=\"text-lg font-medium text-sky-700 mb-2\">Error Metrics</h3>\n              <div className=\"space-y-4\">\n                {kpis\n                  .filter((k) =>\n                    [\n                      \"Error Percentage Threshold\",\n                      \"Average Percentage Error (All)\",\n                      \"Average Percentage Error (Exceeding)\",\n                      \"Drift Detected\",\n                    ].includes(k.rowKey),\n                  )\n                  .map((kpi) => (\n                    <div\n                      key={kpi.rowKey}\n                      className={kpi.rowKey !== kpis[0].rowKey ? \"pt-3 border-t border-sky-800/30\" : \"\"}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm text-gray-600\">{kpi.rowKey}:</span>\n                        <span\n                          className={`text-sm font-medium ${kpi.rowKey === \"Drift Detected\" ? (kpi.value === \"Yes\" ? \"text-rose-600\" : \"text-emerald-600\") : getStatusColor(kpi.status)}`}\n                        >\n                          {kpi.value}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                {kpis\n                  .filter(\n                    (k) =>\n                      ![\n                        \"kstest\",\n                        \"wasserstein\",\n                        \"mseRef\",\n                        \"mseCurrent\",\n                        \"status\",\n                        \"Error Percentage Threshold\",\n                        \"Average Percentage Error (All)\",\n                        \"Average Percentage Error (Exceeding)\",\n                        \"Drift Detected\",\n                      ].includes(k.rowKey),\n                  )\n                  .map((kpi) => (\n                    <div key={kpi.rowKey} className=\"pt-3 border-t border-sky-800/30\">\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm text-gray-600\">{kpi.rowKey}:</span>\n                        <span className={`text-sm font-medium ${getStatusColor(kpi.status)}`}>{kpi.value}</span>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Error Tables Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          {/* Error Comparison */}\n          <div className=\"bg-white/90 rounded-xl shadow-xl overflow-hidden p-6 border border-sky-200/70 backdrop-blur-sm\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4\">\n              <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-600 to-sky-800\">\n                Error Comparison (Current Period)\n              </h2>\n              <div className=\"flex items-center space-x-3 mt-2 sm:mt-0\">\n                <select\n                  className=\"bg-white border border-sky-300 text-gray-800 text-sm rounded-lg focus:ring-sky-500 focus:border-sky-500 p-2\"\n                  value={errorTableView}\n                  onChange={(e) => setErrorTableView(e.target.value)}\n                >\n                  <option value=\"all\">Show All</option>\n                  <option value=\"top20\">Top 20 (Both Ends)</option>\n                  <option value=\"top50\">Top 50 (Both Ends)</option>\n                </select>\n                <button\n                  onClick={downloadErrorCSV}\n                  className=\"bg-sky-600 hover:bg-sky-700 text-white text-sm py-2 px-3 rounded-lg flex items-center\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-4 w-4 mr-1\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\n                    />\n                  </svg>\n                  Download CSV\n                </button>\n              </div>\n            </div>\n            {loading ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <svg\n                  className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n                <span className=\"text-sky-300\">Loading error data...</span>\n              </div>\n            ) : (\n              <div className=\"max-h-96 overflow-y-auto rounded-lg border border-sky-200/70\">\n                <table className=\"min-w-full divide-y divide-gray-300/70\">\n                  <thead className=\"bg-sky-100/80 dark:bg-gray-700/80\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-sm font-medium text-sky-700 uppercase tracking-wider\">\n                        NO.\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-sm font-medium text-sky-700 uppercase tracking-wider\">\n                        ID\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-sm font-medium text-sky-700 uppercase tracking-wider\">\n                        Current Error\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-sm font-medium text-sky-700 uppercase tracking-wider\">\n                        Reference Error\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-sm font-medium text-sky-700 uppercase tracking-wider\">\n                        Difference\n                      </th>\n                    </tr>\n                  </thead>\n\n                  <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                    {filteredErrorData.map((row: TableDataPoint, i: number) => (\n                      <tr key={row.id} className=\"hover:bg-sky-50 transition-colors duration-150\">\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800\">{i + 1}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800\">{row.id}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sky-600 font-medium\">\n                          {(row.abs_curr_per ?? 0).toFixed(2)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sky-600 font-medium\">\n                          {(row.abs_ref_per ?? 0).toFixed(2)}\n                        </td>\n                        <td\n                          className={`px-6 py-4 whitespace-nowrap text-sm font-medium ${(row.difference ?? 0) > 0 ? \"text-rose-600\" : \"text-emerald-600\"}`}\n                        >\n                          {(row.difference ?? 0) > 0 ? \"+\" : \"\"}\n                          {(row.difference ?? 0).toFixed(2)}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n\n          {/* Threshold Exceedances */}\n          <div className=\"bg-gradient-to-br from-rose-100/70 to-white rounded-xl shadow-xl overflow-hidden p-6 border border-rose-300/50 backdrop-blur-sm\">\n            <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-rose-500 to-rose-700 mb-4\">\n              Threshold Exceedances{\" \"}\n              <span className=\"text-sm text-rose-600\">(Threshold: {errorPercentageThreshold.toFixed(2)}%)</span>\n            </h2>\n            {loading ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <svg\n                  className=\"animate-spin h-8 w-8 text-rose-500 mb-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n                <span className=\"text-rose-300\">Loading threshold data...</span>\n              </div>\n            ) : (\n              <div className=\"max-h-96 overflow-y-auto rounded-lg border border-rose-300/50\">\n                <table className=\"min-w-full divide-y divide-rose-300/70\">\n                  <thead className=\"bg-rose-100/80\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-sm font-medium text-rose-700 uppercase tracking-wider\">\n                        NO.\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-sm font-medium text-rose-700 uppercase tracking-wider\">\n                        ID\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-sm font-medium text-rose-700 uppercase tracking-wider\">\n                        True Value\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-sm font-medium text-rose-700 uppercase tracking-wider\">\n                        Predicted Value\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-sm font-medium text-rose-700 uppercase tracking-wider\">\n                        % Error\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-rose-200/70\">\n                    {outletsExceedingThreshold\n                      .slice()\n                      .sort((a, b) => b.percentage_error - a.percentage_error)\n                      .map((outlet, i) => (\n                        <tr key={outlet.id} className=\"hover:bg-rose-50 transition-colors duration-150\">\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800\">{i + 1}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800\">{outlet.id}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\n                            {outlet.y_true.toFixed(2)}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\n                            {outlet.y_pred.toFixed(2)}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-rose-600 font-medium\">\n                            {outlet.percentage_error.toFixed(2)}%\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Error Range Distribution Bar Chart */}\n        <div className=\"bg-white/90 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-sky-200/70 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-600 to-sky-800 mb-4\">\n            ID Distribution by Error Percentage Range\n          </h2>\n          <div className=\"h-80 bg-gray-100/80 rounded-lg p-4 border border-sky-200/70 mb-4\">\n            {loading ? (\n              <div className=\"flex items-center justify-center h-full\">\n                <svg\n                  className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n                <span className=\"text-sky-300\">Loading chart data...</span>\n              </div>\n            ) : (\n              <canvas id=\"errorRangeChart\" width={800} height={320}></canvas>\n            )}\n          </div>\n\n          {/* Selected Range Data Table */}\n          {selectedRange && (\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl font-medium text-sky-700 mb-3\">\n                IDs in {selectedRange} Error Range\n                <button\n                  onClick={() => setSelectedRange(null)}\n                  className=\"ml-2 text-sky-400 hover:text-sky-300\"\n                  aria-label=\"Close details\"\n                >\n                  <X className=\"h-4 w-4 inline\" />\n                </button>\n              </h3>\n              {selectedRangeOutlets.length === 0 ? (\n                <p className=\"text-gray-600\">No IDs in this range</p>\n              ) : (\n                <div className=\"max-h-96 overflow-y-auto rounded-lg border border-sky-300/50\">\n                  <table className=\"min-w-full divide-y divide-sky-300/70\">\n                    <thead className=\"bg-sky-100/80\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-sm font-medium text-sky-700 uppercase tracking-wider\">\n                          ID\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-sm font-medium text-sky-700 uppercase tracking-wider\">\n                          True Value\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-sm font-medium text-sky-700 uppercase tracking-wider\">\n                          Predicted Value\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-sm font-medium text-sky-700 uppercase tracking-wider\">\n                          % Error\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-sky-200/70\">\n                      {selectedRangeOutlets.map((outlet: AllOutlets) => (\n                        <tr key={outlet.id} className=\"hover:bg-sky-50 transition-colors duration-150\">\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800\">{outlet.id}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\n                            {outlet.y_true.toFixed(2)}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\n                            {outlet.y_pred.toFixed(2)}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sky-600 font-medium\">\n                            {outlet.percentage_error.toFixed(2)}%\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* XAI Result Section */}\n        <div className=\"bg-white/90 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-sky-200/70 backdrop-blur-sm\">\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4\">\n            <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-600 to-sky-800\">\n              XAI Result\n            </h2>\n            <button\n              onClick={downloadXaiAsPDF}\n              className=\"bg-sky-600 hover:bg-sky-700 text-white text-sm py-2 px-3 rounded-lg flex items-center mt-2 sm:mt-0\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-4 w-4 mr-1\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\n                />\n              </svg>\n              Download as PDF\n            </button>\n          </div>\n          <div className=\"bg-gray-100/80 rounded-lg p-6 border border-sky-200/70\" id=\"xai-markdown-container\">\n            {loading ? (\n              <div className=\"flex items-center justify-center py-8\">\n                <div className=\"flex flex-col items-center\">\n                  <svg\n                    className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    />\n                  </svg>\n                  <span className=\"text-sky-300\">Loading XAI explanation...</span>\n                </div>\n              </div>\n            ) : (\n              <Markdown content={xaiExplanation} />\n            )}\n          </div>\n        </div>\n        </main>\n        {activeTooltip && <TooltipPopup type={activeTooltip} onClose={() => setActiveTooltip(null)} />}\n      </div>\n    </>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}