{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService.ts"],"sourcesContent":["// services/backendService.ts\n\nexport interface KPI {\n  rowKey: string\n  value: string\n  status?: string\n}\n\nexport interface PlotDataPoint {\n  x: string\n  y: number\n  exceedsThreshold: boolean\n}\n\nexport interface TableDataPoint {\n  id: string\n  timePeriod: string\n  meanPrediction?: number\n  error?: number\n  percentageError?: number\n  status: string\n  abs_curr_per?: number\n  abs_ref_per?: number\n  difference?: number\n}\n\nexport interface OutletsExceedingThreshold {\n  id: string\n  y_true: number\n  y_pred: number\n  percentage_error: number\n}\n\nexport interface AllOutlets {\n  id: number\n  percentage_error: number\n  y_pred: number\n  y_true: number\n}\n\nexport interface MSETrend {\n  MSE: number\n  time_period: string\n}\n\nexport interface DashboardData {\n  mode: string\n  businessUnit: string\n  useCase: string\n  ShortCode: string\n  alertKeeper: string\n  runtime: number\n}\n\nexport interface StatusDistribution {\n  good: number\n  warning: number\n  error: number\n}\n\nexport interface FetchDataResult {\n  kpis: KPI[]\n  errors: {\n    plotData: PlotDataPoint[]\n    tableData: TableDataPoint[]\n  }\n  outletsExceedingThreshold: OutletsExceedingThreshold[]\n  xaiExplanation: string\n  currentPeriod: string\n  referencePeriod: string\n  error_percentage_threshold: number\n  dashboardData: DashboardData\n  all_outlets: AllOutlets[]\n  mse_trend: MSETrend[]\n  sorted_periods: string[]\n  driftDetected: boolean\n  filtered_data?: any[]\n  status_distribution: StatusDistribution\n}\n\nexport async function fetchData(\n  { runtime }: { runtime: string } = { runtime: \"\" }\n): Promise<FetchDataResult> {\n  try {\n    // 1. Fetch drift data\n    const resp = await fetch(`/api/mode1/data${runtime ? `?runtime=${runtime}` : \"\"}`, {\n      credentials: \"include\",\n    })\n    if (!resp.ok) {\n      throw new Error(`HTTP error! Status: ${resp.status}`)\n    }\n    const rawData: any = await resp.json()\n\n    // 2. Fetch dashboard config\n    const dashResp = await fetch(`/dashboard.json`)\n    if (!dashResp.ok) {\n      throw new Error(`HTTP error fetching dashboard.json! Status: ${dashResp.status}`)\n    }\n    const dashboardData: DashboardData = await dashResp.json()\n\n    // 3. Extract drift metrics\n    const driftMetrics = rawData.drift_state?.metrics || {}\n    const driftDetected = rawData.drift_state?.drift_detected ?? false\n    const sorted_periods: string[] = rawData.sorted_periods ?? []\n    const referencePeriod = sorted_periods.length > 0 ? sorted_periods[0] : \"N/A\"\n\n    // 4. Build KPI list\n    const kpis: KPI[] = [\n      {\n        rowKey: \"Drift Detected\",\n        value: driftDetected ? \"Yes\" : \"No\",\n        status: driftDetected ? \"Alert\" : \"Normal\",\n      },\n      {\n        rowKey: \"Error Percentage Threshold\",\n        value: String(rawData.error_percentage_threshold ?? \"N/A\"),\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Average Percentage Error (All)\",\n        value:\n          rawData.average_percentage_error_all != null\n            ? rawData.average_percentage_error_all.toFixed(2)\n            : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Average Percentage Error (Exceeding)\",\n        value:\n          rawData.average_percentage_error_exceeding != null\n            ? rawData.average_percentage_error_exceeding.toFixed(2)\n            : \"N/A\",\n        status: \"Alert\",\n      },\n      {\n        rowKey: \"kstest\",\n        value: driftMetrics.ks_statistic?.toFixed(3) ?? \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"wasserstein\",\n        value: driftMetrics.wasserstein_distance?.toFixed(3) ?? \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"mseRef\",\n        value: driftMetrics.mean_mse_reference?.toFixed(3) ?? \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"mseCurrent\",\n        value: driftMetrics.mean_mse_current?.toFixed(3) ?? \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"status\",\n        value: driftDetected ? \"Warning\" : \"Normal\",\n        status: driftDetected ? \"Warning\" : \"Normal\",\n      },\n    ]\n\n    // 5. Map filtered_data => tableData\n    const filtered_data = rawData.filtered_data ?? []\n    const tableData: TableDataPoint[] = filtered_data.map((item: any) => {\n      const abs_curr_per = item.abs_curr_per ?? 0\n      const abs_ref_per = item.abs_ref_per ?? 0\n      const diff = abs_curr_per - abs_ref_per\n      return {\n        id: String(item.id ?? \"\"),\n        timePeriod: item.period ?? \"\",\n        abs_curr_per,\n        abs_ref_per,\n        difference: diff,\n        status: diff > 0 ? \"Alert\" : \"Normal\",\n      }\n    })\n\n    // 6. Build errors object\n    const errors = {\n      plotData: (rawData.id_error ?? []).map((item: any) => ({\n        x: String(item.id ?? \"\"),\n        y: item.Mean_Prediction_Error ?? 0,\n        exceedsThreshold:\n          Math.abs(item.Mean_Prediction_Error ?? 0) >\n          (rawData.error_percentage_threshold ?? 0),\n      })),\n      tableData:\n        tableData.length > 0\n          ? tableData\n          : (rawData.id_error ?? []).map((item: any) => ({\n              id: String(item.id ?? \"\"),\n              timePeriod: item.time_period ?? \"\",\n              meanPrediction: item.Mean_Prediction_Error ?? 0,\n              error: item.Mean_Prediction_Error ?? 0,\n              percentageError: Math.abs(item.Mean_Prediction_Error ?? 0),\n              status:\n                Math.abs(item.Mean_Prediction_Error ?? 0) >\n                (rawData.error_percentage_threshold ?? 0)\n                  ? \"Alert\"\n                  : \"Normal\",\n            })),\n    }\n\n    // 7. Outlets exceeding threshold\n    const outletsExceedingThreshold: OutletsExceedingThreshold[] =\n      (rawData.outlets_exceeding_threshold ?? []).map((item: any) => ({\n        id: String(item.id ?? \"\"),\n        y_true: item.y_true ?? 0,\n        y_pred: item.y_pred ?? 0,\n        percentage_error: item.percentage_error ?? 0,\n      }))\n\n    // 8. MSE trend\n    const mse_trend: MSETrend[] = (rawData.mse_trend ?? []).map((item: any) => ({\n      MSE:\n        typeof item.MSE === \"number\"\n          ? item.MSE\n          : typeof item.mse === \"number\"\n          ? item.mse\n          : 0,\n      time_period: item.time_period ?? item.timePeriod ?? \"\",\n    }))\n\n    // 9. XAI explanation and periods\n    const xaiExplanation = rawData.explanation ?? \"No explanation available\"\n    const currentPeriod = rawData.current_period ?? rawData.currentPeriod ?? \"N/A\"\n    const error_percentage_threshold = rawData.error_percentage_threshold ?? 0\n\n    // 10. Compute status distribution for pie chart\n    const threshold = error_percentage_threshold\n    const warningThreshold = threshold * 0.8\n    let goodCount = 0\n    let warningCount = 0\n    let errorCount = 0\n\n    const allTableRows = errors.tableData\n    interface TableRowWithDifference {\n      difference?: number\n      percentageError?: number\n    }\n\n    (allTableRows as TableRowWithDifference[]).forEach((row: TableRowWithDifference) => {\n      const errVal =\n      Math.abs(row.difference ?? row.percentageError ?? 0)\n      if (errVal >= threshold) {\n      errorCount++\n      } else if (errVal >= warningThreshold) {\n      warningCount++\n      } else {\n      goodCount++\n      }\n    })\n\n    const total = Math.max(goodCount + warningCount + errorCount, 1)\n    const good = Math.round((goodCount / total) * 100)\n    const warning = Math.round((warningCount / total) * 100)\n    const error = 100 - good - warning\n\n    const status_distribution: StatusDistribution = { good, warning, error }\n\n    return {\n      kpis,\n      errors,\n      outletsExceedingThreshold,\n      xaiExplanation,\n      currentPeriod,\n      referencePeriod,\n      error_percentage_threshold,\n      dashboardData,\n      all_outlets: rawData.all_outlets ?? [],\n      mse_trend,\n      sorted_periods,\n      driftDetected,\n      filtered_data,\n      status_distribution,\n    }\n  } catch (err) {\n    console.error(\"Error fetching data:\", err)\n    throw new Error(\"Failed to fetch and process data\")\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/dashboardService.ts"],"sourcesContent":["/**\n * Shared typings\n * -------------------------------------------------------------------------- */\nexport interface Entry {\n  user: string\n  Runtime: string\n  BusinessUnit: string\n  useCase: string\n  ShortCode: string\n  JSONLink: string\n  alertKeeper: string\n}\n\nexport interface EntriesTableFilter {\n  user?: string\n  Runtime?: string\n  BusinessUnit?: string\n  useCase?: string\n  ShortCode?: string\n  JSONLink?: string\n  alertKeeper?: string          // single name – e.g. \"Kalpa\"\n}\n\n/**\n * Utility helpers\n * -------------------------------------------------------------------------- */\nconst eq = (a?: string, b?: string) =>\n  a !== undefined && b !== undefined ? a.toLowerCase() === b.toLowerCase() : true\n\n/**\n * Fetch the entries table from the API and **return only the rows that match\n * the supplied `filters` object**.  \n *\n * The API is *supposed* to filter server‑side, but we’ve seen it sometimes\n * return the full table (all business units, use‑cases, etc.).  To guarantee\n * correctness we:\n *\n *  1. Pass the query‑string parameters that mirror `filters`.\n *  2. Apply the same filters again in the client, so the caller *always* gets\n *     the precise subset it asked for, even if the backend forgets.\n */\nexport async function fetchEntriesTable(\n  filters: EntriesTableFilter = {},\n): Promise<Entry[]> {\n  /* ------------------------------------------------------------------ */\n  /* 1️⃣  Build the query string we’ll send to the server                */\n  /* ------------------------------------------------------------------ */\n  const params = new URLSearchParams()\n  if (filters.user)         params.append('user',         filters.user)\n  if (filters.Runtime)      params.append('Runtime',      filters.Runtime)\n  if (filters.BusinessUnit) params.append('BusinessUnit', filters.BusinessUnit)\n  if (filters.useCase)      params.append('useCase',      filters.useCase)\n  if (filters.ShortCode)    params.append('ShortCode',    filters.ShortCode)\n  if (filters.JSONLink)     params.append('JSONLink',     filters.JSONLink)\n  if (filters.alertKeeper)  params.append('alertKeeper',  filters.alertKeeper)\n\n  /* ------------------------------------------------------------------ */\n  /* 2️⃣  Fetch from the API                                             */\n  /* ------------------------------------------------------------------ */\n  const res = await fetch(`/api/entries-table?${params.toString()}`, {\n    credentials: 'include',\n  })\n\n  if (!res.ok) {\n    throw new Error(`Failed to fetch entries table: ${res.status} ${res.statusText}`)\n  }\n\n  const allRows: Entry[] = await res.json()\n\n  /* ------------------------------------------------------------------ */\n  /* 3️⃣  Apply the same filters client‑side (safety‑net)                */\n  /* ------------------------------------------------------------------ */\n  const rows = allRows.filter((e) => {\n    if (filters.user         && !eq(e.user,          filters.user        )) return false\n    if (filters.Runtime      &&  e.Runtime         !== filters.Runtime     ) return false\n    if (filters.BusinessUnit && !eq(e.BusinessUnit, filters.BusinessUnit)) return false\n    if (filters.useCase      && !eq(e.useCase,      filters.useCase     )) return false\n    if (filters.ShortCode    &&  e.ShortCode       !== filters.ShortCode   ) return false\n    if (filters.JSONLink     &&  e.JSONLink        !== filters.JSONLink    ) return false\n\n    /* alertKeeper: treat it as a comma‑separated list in the source    */\n    if (filters.alertKeeper) {\n      const keepers = e.alertKeeper\n        .split(',')\n        .map((s) => s.trim().toLowerCase())\n      if (!keepers.includes(filters.alertKeeper.toLowerCase())) return false\n    }\n\n    return true\n  })\n\n  return rows\n}\n"],"names":[],"mappings":"AAAA;;8EAE8E;;;AAqB9E;;8EAE8E,GAC9E,MAAM,KAAK,CAAC,GAAY,IACtB,MAAM,aAAa,MAAM,YAAY,EAAE,WAAW,OAAO,EAAE,WAAW,KAAK;AActE,eAAe,kBACpB,UAA8B,CAAC,CAAC;IAEhC,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,SAAS,IAAI;IACnB,IAAI,QAAQ,IAAI,EAAU,OAAO,MAAM,CAAC,QAAgB,QAAQ,IAAI;IACpE,IAAI,QAAQ,OAAO,EAAO,OAAO,MAAM,CAAC,WAAgB,QAAQ,OAAO;IACvE,IAAI,QAAQ,YAAY,EAAE,OAAO,MAAM,CAAC,gBAAgB,QAAQ,YAAY;IAC5E,IAAI,QAAQ,OAAO,EAAO,OAAO,MAAM,CAAC,WAAgB,QAAQ,OAAO;IACvE,IAAI,QAAQ,SAAS,EAAK,OAAO,MAAM,CAAC,aAAgB,QAAQ,SAAS;IACzE,IAAI,QAAQ,QAAQ,EAAM,OAAO,MAAM,CAAC,YAAgB,QAAQ,QAAQ;IACxE,IAAI,QAAQ,WAAW,EAAG,OAAO,MAAM,CAAC,eAAgB,QAAQ,WAAW;IAE3E,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,MAAM,MAAM,MAAM,CAAC,mBAAmB,EAAE,OAAO,QAAQ,IAAI,EAAE;QACjE,aAAa;IACf;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,IAAI,MAAM,CAAC,CAAC,EAAE,IAAI,UAAU,EAAE;IAClF;IAEA,MAAM,UAAmB,MAAM,IAAI,IAAI;IAEvC,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,OAAO,QAAQ,MAAM,CAAC,CAAC;QAC3B,IAAI,QAAQ,IAAI,IAAY,CAAC,GAAG,EAAE,IAAI,EAAW,QAAQ,IAAI,GAAW,OAAO;QAC/E,IAAI,QAAQ,OAAO,IAAU,EAAE,OAAO,KAAa,QAAQ,OAAO,EAAO,OAAO;QAChF,IAAI,QAAQ,YAAY,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,QAAQ,YAAY,GAAG,OAAO;QAC9E,IAAI,QAAQ,OAAO,IAAS,CAAC,GAAG,EAAE,OAAO,EAAO,QAAQ,OAAO,GAAQ,OAAO;QAC9E,IAAI,QAAQ,SAAS,IAAQ,EAAE,SAAS,KAAW,QAAQ,SAAS,EAAK,OAAO;QAChF,IAAI,QAAQ,QAAQ,IAAS,EAAE,QAAQ,KAAY,QAAQ,QAAQ,EAAM,OAAO;QAEhF,oEAAoE,GACpE,IAAI,QAAQ,WAAW,EAAE;YACvB,MAAM,UAAU,EAAE,WAAW,CAC1B,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,GAAG,WAAW;YAClC,IAAI,CAAC,QAAQ,QAAQ,CAAC,QAAQ,WAAW,CAAC,WAAW,KAAK,OAAO;QACnE;QAEA,OAAO;IACT;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/components/Header.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport Image from 'next/image'\nimport Link from 'next/link'\n\ninterface NavigationItem {\n  path: string\n  label: string\n  icon?: React.ReactNode\n  isActive?: boolean\n}\n\ninterface HeaderProps {\n  title: string\n  logoUrl: string\n  navigationItems?: NavigationItem[]\n  className?: string\n  onNavigation?: (path: string) => void\n}\n\nexport default function Header({\n  title,\n  logoUrl,\n  navigationItems = [],\n  className = '',\n  onNavigation\n}: HeaderProps) {\n  return (\n    <header className={`flex items-center p-4 bg-white shadow-sm ${className}`}>\n      <div className=\"flex items-center\">\n        <Image\n          src={logoUrl}\n          alt={`${title} logo`}\n          width={48}\n          height={48}\n          className=\"rounded-full\"\n          priority\n        />\n        <h1 className=\"ml-3 text-xl font-semibold text-gray-800\">{title}</h1>\n      </div>\n\n      <nav className=\"ml-auto\">\n        <ul className=\"flex space-x-4\">\n          {navigationItems.map((item) => (\n            <li key={item.path}>\n              <Link\n                href={item.path}\n                onClick={() => onNavigation?.(item.path)}\n                className={`flex items-center px-3 py-2 rounded-md transition-colors ${\n                  item.isActive\n                    ? 'bg-blue-50 text-blue-600 font-medium'\n                    : 'text-gray-600 hover:bg-gray-50'\n                }`}\n              >\n                {item.icon && <span className=\"mr-2\">{item.icon}</span>}\n                {item.label}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  )\n}"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAqBe,SAAS,OAAO,EAC7B,KAAK,EACL,OAAO,EACP,kBAAkB,EAAE,EACpB,YAAY,EAAE,EACd,YAAY,EACA;IACZ,qBACE,6LAAC;QAAO,WAAW,CAAC,yCAAyC,EAAE,WAAW;;0BACxE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAK,GAAG,MAAM,KAAK,CAAC;wBACpB,OAAO;wBACP,QAAQ;wBACR,WAAU;wBACV,QAAQ;;;;;;kCAEV,6LAAC;wBAAG,WAAU;kCAA4C;;;;;;;;;;;;0BAG5D,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAG,WAAU;8BACX,gBAAgB,GAAG,CAAC,CAAC,qBACpB,6LAAC;sCACC,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAM,KAAK,IAAI;gCACf,SAAS,IAAM,eAAe,KAAK,IAAI;gCACvC,WAAW,CAAC,yDAAyD,EACnE,KAAK,QAAQ,GACT,yCACA,kCACJ;;oCAED,KAAK,IAAI,kBAAI,6LAAC;wCAAK,WAAU;kDAAQ,KAAK,IAAI;;;;;;oCAC9C,KAAK,KAAK;;;;;;;2BAXN,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;AAmB9B;KA3CwB","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode1/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState, useRef } from \"react\"\nimport { Chart, registerables, type Scale, type ChartEvent } from \"chart.js\"\nimport { fetchData } from \"../../services/backendService\"\nimport { fetchEntriesTable } from \"../../services/dashboardService\"\nimport Header from \"@/components/Header\"\nimport {\n  AlertCircle,\n  AlertTriangle,\n  CheckCircle,\n  Info,\n} from \"lucide-react\"\nimport { Sun, Moon } from \"lucide-react\"\nChart.register(...registerables)\n\ninterface KPI {\n  rowKey: string\n  value: string\n}\n\ninterface TableDataPoint {\n  id: string\n  timePeriod: string\n  abs_curr_per: number\n  abs_ref_per: number\n  difference: number\n  status: string\n}\n\ninterface OutletsExceedingThreshold {\n  id: string\n  y_true: number\n  y_pred: number\n  percentage_error: number\n}\n\ninterface AllOutlets {\n  id: number\n  percentage_error: number\n  y_pred: number\n  y_true: number\n}\n\ninterface MSETrend {\n  MSE: number\n  time_period: string\n}\n\ninterface ERROR_RANGE {\n  min: number\n  max: number\n  label: string\n}\n\nconst ERROR_RANGES: ERROR_RANGE[] = [\n  { min: 0, max: 10, label: \"0-10%\" },\n  { min: 10, max: 20, label: \"10-20%\" },\n  { min: 20, max: 30, label: \"20-30%\" },\n  { min: 30, max: 40, label: \"30-40%\" },\n  { min: 40, max: 50, label: \"40-50%\" },\n  { min: 50, max: 60, label: \"50-60%\" },\n  { min: 60, max: 70, label: \"60-70%\" },\n  { min: 70, max: 80, label: \"70-80%\" },\n  { min: 80, max: 90, label: \"80-90%\" },\n  { min: 90, max: 100, label: \"90-100%\" },\n  { min: 100, max: Number.POSITIVE_INFINITY, label: \">100%\" },\n]\n\nconst TooltipPopup = ({ type, onClose }: { type: string; onClose: () => void }) => {\n  const tooltipContent: Record<string, string> = {\n    kstest: \"Kolmogorov-Smirnov test measures the distance between two cumulative distributions.\",\n    wasserstein: \"Wasserstein distance quantifies the dissimilarity between two probability distributions.\",\n    drift: \"Drift detection identifies significant changes in data patterns over time.\",\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n      <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-xl max-w-md\">\n        <h3 className=\"text-lg font-bold text-sky-700 dark:text-sky-400 mb-2\">Information</h3>\n        <p className=\"text-gray-800 dark:text-gray-300\">{tooltipContent[type]}</p>\n        <button\n          onClick={onClose}\n          className=\"mt-4 px-4 py-2 bg-sky-600 text-white rounded hover:bg-sky-700 transition-colors\"\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default function Mode1Page() {\n  const [kpis, setKpis] = useState<KPI[]>([])\n  const [errors, setErrors] = useState<{ plotData: any[]; tableData: TableDataPoint[] }>({\n    plotData: [],\n    tableData: [],\n  })\n  const [outletsExceedingThreshold, setOutletsExceedingThreshold] = useState<OutletsExceedingThreshold[]>([])\n  const [allOutlets, setAllOutlets] = useState<AllOutlets[]>([])\n  const [entries, setEntries] = useState<any[]>([])\n  const [businessUnit, setBusinessUnit] = useState<string>(\"Not Selected\")\n  const [useCase, setUseCase] = useState<string>(\"Not Selected\")\n  const [shortCode, setShortCode] = useState<string>(\"Not Available\")\n  const [alertKeeperValue, setAlertKeeperValue] = useState<string>(\"Not Selected\")\n  const [runtimeValue, setRuntimeValue] = useState<string>(\"\")\n  const [runtimeOptions, setRuntimeOptions] = useState<string[]>([])\n  const [referencePeriod, setReferencePeriod] = useState<string>(\"N/A\")\n  const [errorPercentageThreshold, setErrorPercentageThreshold] = useState<number>(0)\n  const [mseTrend, setMseTrend] = useState<MSETrend[]>([])\n  const [sortedPeriods, setSortedPeriods] = useState<string[]>([])\n  const [driftDetected, setDriftDetected] = useState<boolean | null>(null)\n  const [statusDistribution, setStatusDistribution] = useState({ good: 65, warning: 25, error: 10 })\n  const [activeTooltip, setActiveTooltip] = useState<string | null>(null)\n  const [backendError, setBackendError] = useState<string | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [errorTableView, setErrorTableView] = useState<string>(\"all\")\n  const [filteredErrorData, setFilteredErrorData] = useState<TableDataPoint[]>([])\n  const [selectedRange, setSelectedRange] = useState<string | null>(null)\n  const [selectedRangeOutlets, setSelectedRangeOutlets] = useState<AllOutlets[]>([])\n  const [errorRangeData, setErrorRangeData] = useState<{\n    range: string\n    count: number\n    outlets: AllOutlets[]\n  }[]>([])\n\n  const errorRangeChartRef = useRef<Chart | null>(null)\n\n  // Theme state\n  const [theme, setTheme] = useState<\"light\" | \"dark\">(\"light\")\n\n  useEffect(() => {\n    document.documentElement.setAttribute(\"data-theme\", theme)\n  }, [theme])\n\n  const renderPieChart = () => {\n    // Your existing pie chart rendering logic here\n  }\n\n  const renderErrorRangeChart = () => {\n    const ctx = document.getElementById(\"errorRangeChart\") as HTMLCanvasElement | null\n    if (!ctx) return\n\n    if (errorRangeChartRef.current) {\n      errorRangeChartRef.current.destroy()\n    }\n\n    const dataToUse = errorRangeData\n\n    const gradientColors = [\n      \"rgba(52, 211, 153, 0.8)\",\n      \"rgba(96, 165, 250, 0.8)\",\n      \"rgba(234, 179, 8, 0.8)\",\n      \"rgba(251, 191, 36, 0.8)\",\n      \"rgba(251, 146, 60, 0.8)\",\n      \"rgba(249, 115, 22, 0.8)\",\n      \"rgba(236, 72, 153, 0.8)\",\n      \"rgba(244, 114, 182, 0.8)\",\n      \"rgba(248, 113, 113, 0.8)\",\n      \"rgba(244, 63, 94, 0.8)\",\n      \"rgba(239, 68, 68, 0.8)\",\n    ]\n\n    const borderColors = [\n      \"rgba(52, 211, 153, 1)\",\n      \"rgba(96, 165, 250, 1)\",\n      \"rgba(234, 179, 8, 1)\",\n      \"rgba(251, 191, 36, 1)\",\n      \"rgba(251, 146, 60, 1)\",\n      \"rgba(249, 115, 22, 1)\",\n      \"rgba(236, 72, 153, 1)\",\n      \"rgba(244, 114, 182, 1)\",\n      \"rgba(248, 113, 113, 1)\",\n      \"rgba(244, 63, 94, 1)\",\n      \"rgba(239, 68, 68, 1)\",\n    ]\n\n    errorRangeChartRef.current = new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: dataToUse.map((d) => d.range),\n        datasets: [\n          {\n            label: \"Number of IDs\",\n            data: dataToUse.map((d) => d.count),\n            backgroundColor: gradientColors.slice(0, dataToUse.length),\n            borderColor: borderColors.slice(0, dataToUse.length),\n            borderWidth: 1,\n            borderRadius: 4,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: true,\n            position: \"top\",\n            labels: {\n              color: \"#334155\",\n              font: { size: 14 },\n            },\n          },\n          title: {\n            display: true,\n            text: \"ID Distribution by Error Percentage Range\",\n            color: \"#0369a1\",\n            font: { size: 16, weight: \"bold\" },\n          },\n          tooltip: {\n            callbacks: {\n              label: (ctx) => `IDs: ${ctx.raw}`,\n              afterLabel: (ctx) => `Click to view details`,\n            },\n            backgroundColor: \"rgba(15, 23, 42, 0.8)\",\n            titleColor: \"#ffffff\",\n            bodyColor: \"#ffffff\",\n            borderColor: \"#1e40af\",\n            borderWidth: 1,\n            padding: 10,\n          },\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: \"Error Percentage Range\",\n              color: \"#0369a1\",\n              font: { weight: \"bold\" },\n            },\n            grid: {\n              color: \"rgba(148, 163, 184, 0.1)\",\n              borderColor: \"rgba(148, 163, 184, 0.2)\",\n            },\n            ticks: {\n              color: \"#334155\",\n              font: { size: 12 },\n            },\n          },\n          y: {\n            title: {\n              display: true,\n              text: \"Number of IDs\",\n              color: \"#0369a1\",\n              font: { weight: \"bold\" },\n            },\n            beginAtZero: true,\n            grid: {\n              color: \"rgba(148, 163, 184, 0.1)\",\n              borderColor: \"rgba(148, 163, 184, 0.2)\",\n            },\n            ticks: {\n              color: \"#334155\",\n              font: { size: 12 },\n              precision: 0,\n            },\n          },\n        },\n        onClick: (_event: ChartEvent, elements: any[]) => {\n          if (elements && elements.length > 0) {\n            const index = elements[0].index\n            if (index !== undefined && index >= 0 && index < dataToUse.length) {\n              handleBarClick(index)\n            }\n          }\n        },\n      },\n    })\n  }\n\n  const handleBarClick = (rangeIndex: number) => {\n    if (rangeIndex >= 0 && rangeIndex < errorRangeData.length) {\n      const range = errorRangeData[rangeIndex]\n      setSelectedRange(range.range)\n      setSelectedRangeOutlets(range.outlets)\n    }\n  }\n\n  const calculateMseChange = () => {\n    const refMse = Number.parseFloat(kpis.find((k) => k.rowKey === \"mseRef\")?.value || \"0\")\n    const currMse = Number.parseFloat(kpis.find((k) => k.rowKey === \"mseCurrent\")?.value || \"0\")\n    if (refMse === 0) return \"N/A\"\n    const change = ((currMse - refMse) / refMse) * 100\n    return `${change >= 0 ? \"+\" : \"\"}${change.toFixed(2)}%`\n  }\n\n  const getStatusColor = (s?: string) => {\n    if (!s) return \"text-gray-700 dark:text-gray-300\"\n    switch (s.toLowerCase()) {\n      case \"warning\":\n        return \"text-amber-700 dark:text-amber-400\"\n      case \"error\":\n        return \"text-rose-700 dark:text-rose-400\"\n      case \"success\":\n        return \"text-emerald-700 dark:text-emerald-400\"\n      default:\n        return \"text-sky-700 dark:text-sky-400\"\n    }\n  }\n\n  const getStatusIcon = (s?: string) => {\n    if (!s) return <Info className=\"h-5 w-5 text-gray-700 dark:text-gray-300\" />\n    switch (s.toLowerCase()) {\n      case \"warning\":\n        return <AlertTriangle className=\"h-5 w-5 text-amber-700 dark:text-amber-400\" />\n      case \"error\":\n        return <AlertCircle className=\"h-5 w-5 text-rose-700 dark:text-rose-400\" />\n      case \"success\":\n        return <CheckCircle className=\"h-5 w-5 text-emerald-700 dark:text-emerald-400\" />\n      default:\n        return <Info className=\"h-5 w-5 text-sky-700 dark:text-sky-400\" />\n    }\n  }\n\n  useEffect(() => {\n    const fetchAllData = async (): Promise<void> => {\n      setLoading(true)\n      setBackendError(null)\n      try {\n        const data = await fetchData({ runtime: runtimeValue })\n\n        setKpis(data.kpis || [])\n        setErrors(data.errors || { plotData: [], tableData: [] })\n        setOutletsExceedingThreshold(data.outletsExceedingThreshold || [])\n        setAllOutlets(data.all_outlets || [])\n\n        if (data.sorted_periods && data.sorted_periods.length > 0) {\n          setReferencePeriod(data.sorted_periods[0])\n        } else {\n          setReferencePeriod(\"N/A\")\n        }\n\n        setErrorPercentageThreshold(data.error_percentage_threshold ?? 0)\n        setSortedPeriods(data.sorted_periods || [])\n        setDriftDetected(data.driftDetected || null)\n\n        // Status distribution\n        const tableData = data.errors?.tableData || []\n        const threshold = data.error_percentage_threshold || 5\n        let goodCount = 0\n        let warningCount = 0\n        let errorCount = 0\n\n        tableData.forEach((row) => {\n          const errorValue = Math.abs(row.difference ?? 0)\n          if (errorValue >= threshold) {\n            errorCount++\n          } else if (errorValue >= threshold * 0.8) {\n            warningCount++\n          } else {\n            goodCount++\n          }\n        })\n\n        setStatusDistribution({\n          good: goodCount,\n          warning: warningCount,\n          error: errorCount,\n        })\n\n        // Error range data\n        const rangeData = ERROR_RANGES.map((range) => {\n          const outletsInRange = data.all_outlets.filter((outlet: AllOutlets) => {\n            const pe = outlet.percentage_error\n            return pe >= range.min && pe < range.max\n          })\n          return {\n            range: range.label,\n            count: outletsInRange.length,\n            outlets: outletsInRange,\n          }\n        })\n\n        setErrorRangeData(rangeData)\n\n        setLoading(false)\n      } catch (err) {\n        console.error(err)\n        setBackendError(\"Failed to load data.\")\n        setLoading(false)\n      }\n    }\n\n    if (runtimeValue) {\n      fetchAllData()\n    }\n  }, [runtimeValue])\n\n  useEffect(() => {\n    if (!loading) {\n      renderPieChart()\n      renderErrorRangeChart()\n    }\n  }, [loading, statusDistribution, errorRangeData])\n\n  useEffect(() => {\n    const fetchEntries = async () => {\n      try {\n        const res = await fetchEntriesTable()\n        const filtered = res.filter((e: any) =>\n          e.ShortCode !== \"Not Available\"\n        )\n\n        setEntries(filtered)\n\n        if (filtered.length === 0) {\n          setBusinessUnit(\"Not Selected\")\n          setUseCase(\"Not Selected\")\n          setShortCode(\"Not Available\")\n          setRuntimeOptions([])\n          setAlertKeeperValue(\"Not Selected\")\n          setRuntimeValue(\"\")\n        } else {\n          setBusinessUnit(filtered[0].BusinessUnit)\n          setUseCase(filtered[0].useCase)\n          setShortCode(filtered[0].ShortCode)\n          const uniqueRuntimes = Array.from(new Set(filtered.map((e: any) => e.Runtime)))\n          setRuntimeOptions(uniqueRuntimes)\n          setRuntimeValue(uniqueRuntimes[0])\n          const initialKeeper = filtered.find((e: any) => e.Runtime === uniqueRuntimes[0])?.alertKeeper\n          setAlertKeeperValue(initialKeeper || \"Not Selected\")\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch entries:\", error)\n      }\n    }\n\n    fetchEntries()\n  }, [])\n\n  useEffect(() => {\n    const keeper = entries.find((e) => e.Runtime === runtimeValue)?.alertKeeper\n    setAlertKeeperValue(keeper || \"Not Selected\")\n  }, [runtimeValue, entries])\n\n  const filterErrorData = () => {\n    const uniqueData = errors.tableData\n    if (errorTableView === \"all\") {\n      setFilteredErrorData(uniqueData)\n    } else if (errorTableView === \"top20\") {\n      const top20 = uniqueData.slice(0, 20)\n      const bottom20 = [...uniqueData].sort((a, b) => (a.difference ?? 0) - (b.difference ?? 0)).slice(0, 20)\n      setFilteredErrorData([...top20, ...bottom20])\n    } else if (errorTableView === \"top50\") {\n      const top50 = uniqueData.slice(0, 50)\n      const bottom50 = [...uniqueData].sort((a, b) => (a.difference ?? 0) - (b.difference ?? 0)).slice(0, 50)\n      setFilteredErrorData([...top50, ...bottom50])\n    }\n  }\n\n  useEffect(() => {\n    filterErrorData()\n  }, [errorTableView, errors.tableData])\n\n  return (\n    <>\n      <Header />\n      <div\n        className={`min-h-screen flex flex-col ${\n          theme === \"dark\" ? \"bg-gray-900 text-gray-100\" : \"bg-gray-100 text-gray-800\"\n        }`}\n      >\n        <title>Mode 1 | Business Dashboard</title>\n        <main className=\"flex-grow container mx-auto px-4 py-8\">\n          {/* Backend Error */}\n          {backendError && (\n            <div className=\"bg-rose-950/40 border border-rose-800/60 rounded-lg p-4 mb-6 backdrop-blur-sm shadow-lg\">\n              <div className=\"flex items-center\">\n                <AlertCircle className=\"h-5 w-5 text-rose-400 mr-2\" />\n                <span className=\"text-sm font-medium text-rose-400\">{backendError}</span>\n              </div>\n            </div>\n          )}\n\n          {/* Header Information */}\n          <div className=\"mb-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <div className=\"mb-2\">\n                  <span className=\"text-lg font-medium text-sky-700 dark:text-sky-400\">Business Unit: </span>\n                  <span className=\"text-sky-900 dark:text-sky-300\">\n                    {loading ? \"Loading...\" : businessUnit || \"Not Selected\"}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"text-lg font-medium text-sky-700 dark:text-sky-400\">Use Case: </span>\n                  <span className=\"text-sky-900 dark:text-sky-300\">\n                    {loading ? \"Loading...\" : useCase || \"Not Selected\"}\n                  </span>\n                </div>\n              </div>\n              <div>\n                <div className=\"mb-4\">\n                  <span className=\"text-lg font-medium text-sky-700 dark:text-sky-400\">Short Code: </span>\n                  <span className=\"text-sky-900 dark:text-sky-300\">\n                    {loading ? \"Loading...\" : shortCode || \"Not Available\"}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"text-lg font-medium text-sky-700 dark:text-sky-400\">Alert Keeper: </span>\n                  <span className=\"text-sky-900 dark:text-sky-300\">\n                    {loading ? \"Loading...\" : alertKeeperValue || \"Not Selected\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* KPI Section */}\n          <div\n            className={`rounded-xl shadow-xl overflow-hidden p-6 mb-6 border ${\n              theme === \"dark\"\n                ? \"border-sky-700 bg-gray-800\"\n                : \"border-sky-200 bg-white/90\"\n            }`}\n          >\n            <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-600 to-sky-800 mb-4\">\n              Key Performance Indicators\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div\n                className={`${\n                  theme === \"dark\"\n                    ? \"bg-gradient-to-br from-gray-800 to-sky-900/50 border-sky-700\"\n                    : \"bg-gradient-to-br from-white to-sky-100/50 border-sky-300/50\"\n                } p-4 rounded-lg border shadow-md hover:shadow-sky-900/20 hover:border-sky-700/50 transition-all relative`}\n              >\n                <button\n                  onClick={() => setActiveTooltip(\"kstest\")}\n                  className=\"absolute top-2 right-2 text-sky-400 hover:text-sky-300 transition-colors\"\n                  aria-label=\"KS Test Information\"\n                >\n                  <Info className=\"h-5 w-5\" />\n                </button>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300\">KS-test:</span>\n                  <span className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">\n                    {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"kstest\")?.value || \"N/A\"}\n                  </span>\n                </div>\n              </div>\n\n              <div\n                className={`${\n                  theme === \"dark\"\n                    ? \"bg-gradient-to-br from-gray-800 to-sky-900/50 border-sky-700\"\n                    : \"bg-gradient-to-br from-white to-sky-100/50 border-sky-300/50\"\n                } p-4 rounded-lg border shadow-md hover:shadow-sky-900/20 hover:border-sky-700/50 transition-all`}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300\">Wasserstein:</span>\n                  <span className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">\n                    {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"wasserstein\")?.value || \"N/A\"}\n                  </span>\n                </div>\n              </div>\n\n              <div\n                className={`${\n                  theme === \"dark\"\n                    ? \"bg-gradient-to-br from-gray-800 to-sky-900/50 border-sky-700\"\n                    : \"bg-gradient-to-br from-white to-sky-100/50 border-sky-300/50\"\n                } p-4 rounded-lg border shadow-md hover:shadow-sky-900/20 hover:border-sky-700/50 transition-all`}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300\">Drift Detected:</span>\n                  <span\n                    className={`text-sm font-medium ${\n                      driftDetected === null\n                        ? \"text-gray-700 dark:text-gray-300\"\n                        : driftDetected\n                          ? \"text-rose-600 dark:text-rose-400\"\n                          : \"text-emerald-600 dark:text-emerald-400\"\n                    }`}\n                  >\n                    {loading ? \"Loading...\" : driftDetected === null ? \"N/A\" : driftDetected ? \"Yes\" : \"No\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Error Tables Section */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n            {/* Error Comparison */}\n            <div\n              className={`${\n                theme === \"dark\"\n                  ? \"bg-gray-800 border-sky-700\"\n                  : \"bg-white/90 border-sky-200/70\"\n              } rounded-xl shadow-xl overflow-hidden p-6 border`}\n            >\n              <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-600 to-sky-800 mb-4\">\n                Error Comparison (Current Period)\n              </h2>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        ID\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Current (%)\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Reference (%)\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Difference\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody\n                    className={`${\n                      theme === \"dark\" ? \"bg-gray-800 divide-gray-700\" : \"bg-white divide-gray-200\"\n                    } divide-y`}\n                  >\n                    {filteredErrorData.map((row: TableDataPoint, i: number) => (\n                      <tr key={row.id} className=\"hover:bg-sky-50 dark:hover:bg-gray-700 transition-colors duration-150\">\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-gray-200\">\n                          {i + 1}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-gray-200\">\n                          {(row.abs_curr_per ?? 0).toFixed(2)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-gray-200\">\n                          {(row.abs_ref_per ?? 0).toFixed(2)}\n                        </td>\n                        <td\n                          className={`px-6 py-4 whitespace-nowrap text-sm font-medium ${\n                            (row.difference ?? 0) > 0\n                              ? \"text-rose-600 dark:text-rose-400\"\n                              : \"text-emerald-600 dark:text-emerald-400\"\n                          }`}\n                        >\n                          {(row.difference ?? 0) > 0 ? \"+\" : \"\"}\n                          {(row.difference ?? 0).toFixed(2)}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            {/* Threshold Exceedances */}\n            <div\n              className={`${\n                theme === \"dark\"\n                  ? \"bg-rose-900/70 border-rose-700\"\n                  : \"bg-rose-100/70 border-rose-300/50\"\n              } rounded-xl shadow-xl overflow-hidden p-6 border`}\n            >\n              <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-600 to-sky-800 mb-4\">\n                Top Outlets Exceeding Threshold\n              </h2>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-rose-200/70 dark:divide-gray-700\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-700 uppercase tracking-wider\">\n                        ID\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-700 uppercase tracking-wider\">\n                        True Value\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-700 uppercase tracking-wider\">\n                        Predicted Value\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-700 uppercase tracking-wider\">\n                        % Error\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-rose-200/70 dark:divide-gray-700\">\n                    {outletsExceedingThreshold\n                      .slice()\n                      .sort((a, b) => b.percentage_error - a.percentage_error)\n                      .map((outlet, i) => (\n                        <tr\n                          key={outlet.id}\n                          className=\"hover:bg-rose-50 dark:hover:bg-gray-800 transition-colors duration-150\"\n                        >\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-gray-200\">\n                            {i + 1}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-gray-200\">\n                            {outlet.y_true}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-gray-200\">\n                            {outlet.y_pred}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-rose-600 dark:text-rose-400\">\n                            {outlet.percentage_error.toFixed(2)}\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n\n          {/* Error Distribution Chart */}\n          <div\n            className={`${\n              theme === \"dark\"\n                ? \"bg-gray-800 border-sky-700\"\n                : \"bg-white/90 border-sky-200/70\"\n            } rounded-xl shadow-xl overflow-hidden p-6 mb-6 border`}\n          >\n            <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-600 to-sky-800 mb-4\">\n              ID Distribution by Error Percentage Range\n            </h2>\n            <div className=\"h-80 bg-gray-100/80 rounded-lg p-4 border border-sky-200/70 mb-4\">\n              {loading ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <svg className=\"animate-spin h-8 w-8 text-sky-500 mb-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                </div>\n              ) : (\n                <canvas id=\"errorRangeChart\"></canvas>\n              )}\n            </div>\n          </div>\n\n          {/* Status Distribution */}\n          <div\n            className={`${\n              theme === \"dark\"\n                ? \"from-gray-800 to-sky-900/50 border-sky-700\"\n                : \"from-white to-sky-100/50 border-sky-300/50\"\n            } p-6 rounded-lg border shadow-md`}\n          >\n            <h3 className=\"text-lg font-medium text-sky-700 dark:text-sky-400 mb-2\">Status Distribution</h3>\n            <div className=\"h-64\">\n              <canvas id=\"statusPieChart\"></canvas>\n            </div>\n          </div>\n        </main>\n\n        {/* Theme Toggle Button in Header */}\n        <div className=\"fixed top-4 right-4 z-50\">\n          <button\n            onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n            className={`p-2 rounded-full ${\n              theme === \"dark\"\n                ? \"bg-sky-100 text-sky-700 hover:bg-sky-200\"\n                : \"bg-sky-700 text-sky-100 hover:bg-sky-800\"\n            } transition-colors`}\n            aria-label=\"Toggle theme\"\n          >\n            {theme === \"dark\" ? (\n              <Sun className=\"h-5 w-5\" />\n            ) : (\n              <Moon className=\"h-5 w-5\" />\n            )}\n          </button>\n        </div>\n\n        {activeTooltip && <TooltipPopup type={activeTooltip} onClose={() => setActiveTooltip(null)} />}\n      </div>\n    </>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}